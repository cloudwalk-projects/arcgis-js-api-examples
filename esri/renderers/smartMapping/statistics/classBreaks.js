// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define("require exports dojo/_base/lang ../../../core/promiseUtils ../../../tasks/support/GenerateRendererParameters ./support/utils ../support/utils".split(" "),function(B,C,p,d,t,c,m){function u(a){if(!a||!a.layer||!a.field)return d.reject(c.createError("class-breaks:missing-parameters","'layer' and 'field' parameters are required"));var b=p.mixin({},a);b.normalizationType=c.getNormalizationType(b);b.layer=m.createLayerAdapter(b.layer);return!b.layer?d.reject(c.createError("class-breaks:invalid-parameters",
"'layer' must be one of these types: "+v)):b.layer.load().then(function(){var a=b.layer,g=b.field,h=b.minValue,e=b.maxValue,f=null!=h||null!=e,l=b.classificationMethod,q="percent-of-total"===b.normalizationType,r=!1!==b.analyzeData,g=g?a.getField(g):null,n=m.getFieldsList({field:b.field,normalizationField:b.normalizationField});if(n=c.verifyBasicFieldValidity(a,n,"class-breaks:invalid-parameters"))return d.reject(n);if(a=c.verifyNumericField(a,g,"class-breaks:invalid-parameters"))return d.reject(a);
if(f)if(r){if(q&&null==b.normalizationTotal)return d.reject(c.createError("class-breaks:missing-parameters","'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'minValue', 'maxValue' are specified"))}else{if(null==h||null==e)return d.reject(c.createError("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false"));if(l&&"equal-interval"!==l)return d.reject(c.createError("class-breaks:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'analyzeData' is false"));
if(q&&null==b.normalizationTotal)return d.reject(c.createError("class-breaks:missing-parameters","'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'analyzeData' is false"))}else if(!r)return d.reject(c.createError("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false"));return b})}function w(a,b){var k=a.layer,g=c.createCBDefn(a,b),d=c.getSQLFilterForNormalization(a),e=c.getFieldExpr(a,a.normalizationTotal),e=
c.getRangeExpr(e,a.minValue,a.maxValue),f=new t;f.classificationDefinition=g;f.where=c.mergeWhereClauses(d,e);return k.generateRenderer(f)}function s(a,b){var c=b.classBreakInfos,d=c[0].minValue,h=c[c.length-1].maxValue,e="standard-deviation"===a.classificationMethod,f=x,c=c.map(function(a){var b=a.label;a={minValue:a.minValue,maxValue:a.maxValue,label:b};if(e&&b){var c=b.match(f).map(function(a){return+p.trim(a)});2===c.length?(a.minStdDev=c[0],a.maxStdDev=c[1],0>c[0]&&0<c[1]&&(a.hasAvg=!0)):1===
c.length&&(-1<b.indexOf("\x3c")?(a.minStdDev=null,a.maxStdDev=c[0]):-1<b.indexOf("\x3e")&&(a.minStdDev=c[0],a.maxStdDev=null))}return a});return{minValue:d,maxValue:h,classBreakInfos:c,normalizationTotal:b.normalizationTotal}}function y(a,b){var k=a.minValue,g=a.maxValue;if(k>=g)return d.reject(c.createError("class-breaks:invalid-parameters","'minValue' should be less than 'maxValue'"));for(var h=[],e=(g-k)/b,f=0;f<b;f++){var l=k+f*e;h.push({minValue:l,maxValue:l+e})}h[b-1].maxValue=g;return d.resolve({classBreakInfos:h,
normalizationTotal:a.normalizationTotal})}function z(a){var b=a.numClasses||A;return!1!==a.analyzeData?w(a,b).then(function(b){return s(a,b)}):y(a,b).then(function(b){return s(a,b)})}var A=5,x=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,v=m.supportedLayerTypes.join(", ");return function(a){return u(a).then(function(a){return z(a)})}});