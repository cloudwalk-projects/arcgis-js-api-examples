// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define("../core/kebabDictionary ../geometry/Extent ../geometry/Multipoint ../geometry/Polyline ../geometry/Polygon ../geometry/support/jsonUtils ../request ./Task dojo/_base/lang".split(" "),function(h,n,r,p,m,g,f,s,e){var q=h({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});h=s.createSubclass({declaredClass:"esri.tasks.GeometryService",areasAndLengths:function(a,c){var b={query:e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),callbackParamName:"callback"};
if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/areasAndLengths",b).then(function(a){return a.data})},autoComplete:function(a,c,b){var d=a[0].spatialReference;a={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(d.toJSON()),polygons:JSON.stringify(this._encodeGeometries(a).geometries),polylines:JSON.stringify(this._encodeGeometries(c).geometries)}),callbackParamName:"callback"};if(this.requestOptions||b)a=e.mixin({},this.requestOptions,
b,a);return f(this.parsedUrl.path+"/autoComplete",a).then(function(a){return(a.data.geometries||[]).map(function(a){return new m({spatialReference:d,rings:a.rings})})})},buffer:function(a,c){var b=e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),d=a.outSpatialReference||a.geometries[0].spatialReference,b={query:b,callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/buffer",b).then(function(a){return(a.data.geometries||[]).map(function(a){return new m({spatialReference:d,
rings:a.rings})})})},cut:function(a,c,b){var d=a[0].spatialReference,k=a.map(function(a){return a.toJSON()});a={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(d.toJSON()),target:JSON.stringify({geometryType:g.getJsonType(a[0]),geometries:k}),cutter:JSON.stringify(c.toJSON())}),callbackParamName:"callback"};if(this.requestOptions||b)a=e.mixin({},this.requestOptions,b,a);return f(this.parsedUrl.path+"/cut",a).then(function(a){a=a.data;return{cutIndexes:a.cutIndexes,geometries:(a.geometries||
[]).map(function(a){return g.fromJSON(a).set("spatialReference",d)})}})},convexHull:function(a,c){var b=a[0].spatialReference,d={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(b.toJSON()),geometries:JSON.stringify(this._encodeGeometries(a))}),callbackParamName:"callback"};if(this.requestOptions||c)d=e.mixin({},this.requestOptions,c,d);return f(this.parsedUrl.path+"/convexHull",d).then(function(a){return g.fromJSON(a.data.geometry).set("spatialReference",b)})},densify:function(a,
c){var b=e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),d=a.geometries[0].spatialReference,b={query:b,callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/densify",b).then(function(a){return(a.data.geometries||[]).map(function(a){return g.fromJSON(a).set("spatialReference",d)})})},difference:function(a,c,b){var d=a[0].spatialReference;a={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(d.toJSON()),geometries:JSON.stringify(this._encodeGeometries(a)),
geometry:JSON.stringify({geometryType:g.getJsonType(c),geometry:c.toJSON()})}),callbackParamName:"callback"};if(this.requestOptions||b)a=e.mixin({},this.requestOptions,b,a);return f(this.parsedUrl.path+"/difference",a).then(function(a){return(a.data.geometries||[]).map(function(a){return g.fromJSON(a).set("spatialReference",d)})})},distance:function(a,c){var b={query:e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,
c,b);return f(this.parsedUrl.path+"/distance",b).then(this._handleDistanceResponse)},fromGeoCoordinateString:function(a,c){var b={};e.isObject(a.sr)?b.sr=a.sr.wkid||JSON.stringify(a.sr.toJSON()):b.sr=a.sr;b.strings=JSON.stringify(a.strings);b.conversionType=q.toJSON(a.conversionType||"mgrs");b.conversionMode=a.conversionMode;b={query:e.mixin({},this.parsedUrl.query,{f:"json"},b),callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+
"/fromGeoCoordinateString",b).then(this._handleFromGeoCoordinateResponse)},generalize:function(a,c){var b=e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),d=a.geometries[0].spatialReference,b={query:b,callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/generalize",b).then(function(a){return(a.data.geometries||[]).map(function(a){return g.fromJSON(a).set("spatialReference",d)})})},intersect:function(a,c,b){var d=a[0].spatialReference;
a={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(d.toJSON()),geometries:JSON.stringify(this._encodeGeometries(a)),geometry:JSON.stringify({geometryType:g.getJsonType(c),geometry:c.toJSON()})}),callbackParamName:"callback"};if(this.requestOptions||b)a=e.mixin({},this.requestOptions,b,a);return f(this.parsedUrl.path+"/intersect",a).then(function(a){return(a.data.geometries||[]).map(function(a){return g.fromJSON(a).set("spatialReference",d)})})},lengths:function(a,c){var b={query:e.mixin({},
this.parsedUrl.query,{f:"json"},a.toJSON()),callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/lengths",b).then(function(a){return a.data})},labelPoints:function(a,c){var b=a.map(function(a){return a.toJSON()}),d=a[0].spatialReference,b={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:d.wkid?d.wkid:JSON.stringify(d.toJSON()),polygons:JSON.stringify(b)}),callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},
this.requestOptions,c,b);return f(this.parsedUrl.path+"/labelPoints",b).then(function(a){return(a.data.labelPoints||[]).map(function(a){return g.fromJSON(a).set("spatialReference",d)})})},offset:function(a,c){var b=e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),d=a.geometries[0].spatialReference,b={query:b,callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/offset",b).then(function(a){return(a.data.geometries||[]).map(function(a){return g.fromJSON(a).set("spatialReference",
d)})})},project:function(a,c){var b=e.mixin({},a.toJSON(),this.parsedUrl.query,{f:"json"}),d=a.outSR,k=g.getJsonType(a.geometries[0]),l=this._decodeGeometries,b={query:b,callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/project",b).then(function(a){return l(a.data,k,d)})},relation:function(a,c){var b={query:e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},
this.requestOptions,c,b);return f(this.parsedUrl.path+"/relation",b).then(this._handleRelationResponse)},reshape:function(a,c,b){var d=a.spatialReference;a={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(d.toJSON()),target:JSON.stringify({geometryType:g.getJsonType(a),geometry:a.toJSON()}),reshaper:JSON.stringify(c.toJSON())}),callbackParamName:"callback"};if(this.requestOptions||b)a=e.mixin({},this.requestOptions,b,a);return f(this.parsedUrl.path+"/reshape",a).then(function(a){return g.fromJSON(a.data.geometry).set("spatialReference",
d)})},simplify:function(a,c){var b=a[0].spatialReference,d=e.mixin({},this.parsedUrl.query,{f:"json",sr:b.wkid?b.wkid:JSON.stringify(b.toJSON()),geometries:JSON.stringify(this._encodeGeometries(a))}),k=g.getJsonType(a[0]),l=this._decodeGeometries,d={query:d,callbackParamName:"callback"};if(this.requestOptions||c)d=e.mixin({},this.requestOptions,c,d);return f(this.parsedUrl.path+"/simplify",d).then(function(a){return l(a.data,k,b)})},toGeoCoordinateString:function(a,c){var b={};e.isObject(a.sr)?b.sr=
a.sr.wkid||JSON.stringify(a.sr.toJSON()):b.sr=a.sr;b.coordinates=JSON.stringify(a.coordinates);b.conversionType=q.toJSON(a.conversionType||"mgrs");b.conversionMode=a.conversionMode;b.numOfDigits=a.numOfDigits;b.rounding=a.rounding;b.addSpaces=a.addSpaces;b={query:e.mixin({},this.parsedUrl.query,{f:"json"},b),callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/toGeoCoordinateString",b).then(this._handleToGeoCoordinateResponse)},
trimExtend:function(a,c){var b=e.mixin({},this.parsedUrl.query,{f:"json"},a.toJSON()),d=a.sr,b={query:b,callbackParamName:"callback"};if(this.requestOptions||c)b=e.mixin({},this.requestOptions,c,b);return f(this.parsedUrl.path+"/trimExtend",b).then(function(a){return(a.data.geometries||[]).map(function(a){return new p({spatialReference:d,paths:a.paths})})})},union:function(a,c){var b=a[0].spatialReference,d={query:e.mixin({},this.parsedUrl.query,{f:"json",sr:JSON.stringify(b.toJSON()),geometries:JSON.stringify(this._encodeGeometries(a))}),
callbackParamName:"callback"};if(this.requestOptions||c)d=e.mixin({},this.requestOptions,c,d);return f(this.parsedUrl.path+"/union",d).then(function(a){return g.fromJSON(a.data.geometry).set("spatialReference",b)})},_handleRelationResponse:function(a){return a.data.relations},_handleDistanceResponse:function(a){return(a=a.data)&&a.distance},_handleToGeoCoordinateResponse:function(a){return a.data.strings},_handleFromGeoCoordinateResponse:function(a){return a.data.coordinates},_encodeGeometries:function(a){var c=
[],b,d=a.length;for(b=0;b<d;b++)c.push(a[b].toJSON());return{geometryType:g.getJsonType(a[0]),geometries:c}},_decodeGeometries:function(a,c,b){var d=g.getGeometryType(c);a=a.geometries;var f=[],l={spatialReference:b.toJSON()},h=e.mixin;a.forEach(function(a,b){f[b]=new d(h(a,l))});return f},_toProjectGeometry:function(a){var c=a.spatialReference.toJSON();return a instanceof n?new m({rings:[[[a.xmin,a.ymin],[a.xmin,a.ymax],[a.xmax,a.ymax],[a.xmax,a.ymin],[a.xmin,a.ymin]]],spatialReference:c}):new p({paths:[[].concat(a.points)],
spatialReference:c})},_fromProjectedGeometry:function(a,c,b){return"extent"===c?(a=a.rings[0],new n(a[0][0],a[0][1],a[2][0],a[2][1],b)):new r({points:a.paths[0],spatialReference:b.toJSON()})}});e.mixin(h,{UNIT_METER:9001,UNIT_GERMAN_METER:9031,UNIT_FOOT:9002,UNIT_SURVEY_FOOT:9003,UNIT_CLARKE_FOOT:9005,UNIT_FATHOM:9014,UNIT_NAUTICAL_MILE:9030,UNIT_SURVEY_CHAIN:9033,UNIT_SURVEY_LINK:9034,UNIT_SURVEY_MILE:9035,UNIT_KILOMETER:9036,UNIT_CLARKE_YARD:9037,UNIT_CLARKE_CHAIN:9038,UNIT_CLARKE_LINK:9039,UNIT_SEARS_YARD:9040,
UNIT_SEARS_FOOT:9041,UNIT_SEARS_CHAIN:9042,UNIT_SEARS_LINK:9043,UNIT_BENOIT_1895A_YARD:9050,UNIT_BENOIT_1895A_FOOT:9051,UNIT_BENOIT_1895A_CHAIN:9052,UNIT_BENOIT_1895A_LINK:9053,UNIT_BENOIT_1895B_YARD:9060,UNIT_BENOIT_1895B_FOOT:9061,UNIT_BENOIT_1895B_CHAIN:9062,UNIT_BENOIT_1895B_LINK:9063,UNIT_INDIAN_FOOT:9080,UNIT_INDIAN_1937_FOOT:9081,UNIT_INDIAN_1962_FOOT:9082,UNIT_INDIAN_1975_FOOT:9083,UNIT_INDIAN_YARD:9084,UNIT_INDIAN_1937_YARD:9085,UNIT_INDIAN_1962_YARD:9086,UNIT_INDIAN_1975_YARD:9087,UNIT_FOOT_1865:9070,
UNIT_RADIAN:9101,UNIT_DEGREE:9102,UNIT_ARCMINUTE:9103,UNIT_ARCSECOND:9104,UNIT_GRAD:9105,UNIT_GON:9106,UNIT_MICRORADIAN:9109,UNIT_ARCMINUTE_CENTESIMAL:9112,UNIT_ARCSECOND_CENTESIMAL:9113,UNIT_MIL6400:9114,UNIT_BRITISH_1936_FOOT:9095,UNIT_GOLDCOAST_FOOT:9094,UNIT_INTERNATIONAL_CHAIN:109003,UNIT_INTERNATIONAL_LINK:109004,UNIT_INTERNATIONAL_YARD:109001,UNIT_STATUTE_MILE:9093,UNIT_SURVEY_YARD:109002,UNIT_50KILOMETER_LENGTH:109030,UNIT_150KILOMETER_LENGTH:109031,UNIT_DECIMETER:109005,UNIT_CENTIMETER:109006,
UNIT_MILLIMETER:109007,UNIT_INTERNATIONAL_INCH:109008,UNIT_US_SURVEY_INCH:109009,UNIT_INTERNATIONAL_ROD:109010,UNIT_US_SURVEY_ROD:109011,UNIT_US_NAUTICAL_MILE:109012,UNIT_UK_NAUTICAL_MILE:109013,UNIT_SQUARE_INCHES:"esriSquareInches",UNIT_SQUARE_FEET:"esriSquareFeet",UNIT_SQUARE_YARDS:"esriSquareYards",UNIT_ACRES:"esriAcres",UNIT_SQUARE_MILES:"esriSquareMiles",UNIT_SQUARE_MILLIMETERS:"esriSquareMillimeters",UNIT_SQUARE_CENTIMETERS:"esriSquareCentimeters",UNIT_SQUARE_DECIMETERS:"esriSquareDecimeters",
UNIT_SQUARE_METERS:"esriSquareMeters",UNIT_ARES:"esriAres",UNIT_HECTARES:"esriHectares",UNIT_SQUARE_KILOMETERS:"esriSquareKilometers"});return h});