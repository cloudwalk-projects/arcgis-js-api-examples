// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.19/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/layers/vectorTiles/views/vectorTiles/renderers/shaders/background.vs.glsl":"attribute vec2 a_pos;\r\n\r\nuniform highp mat4 u_transformMatrix;\r\nuniform mediump vec2 u_normalized_origin;\r\nuniform mediump float u_coord_range;\r\nuniform mediump float u_depth;\r\n\r\nvoid main() {\r\n  gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(u_coord_range * a_pos, 0.0, 1.0);\r\n}\r\n","url:esri/layers/vectorTiles/views/vectorTiles/renderers/shaders/background.fs.glsl":"uniform lowp vec4 u_color;\r\nvoid main() {\r\n  gl_FragColor \x3d u_color;\r\n}",
"url:esri/layers/vectorTiles/views/vectorTiles/renderers/shaders/patternFillShader.vs.glsl":"uniform highp mat4 u_transformMatrix;\r\nuniform highp vec2 u_normalized_origin;\r\nuniform mediump float u_depth;\r\nuniform mediump mat3 u_pattern_matrix; // can we use meduim precision??\r\n\r\nattribute vec2 a_pos;\r\n\r\nvarying mediump vec2 v_tileTextureCoord;\r\n\r\nvoid main()\r\n{\r\n  gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0);\r\n  // calculate the texture coordinates of the current vertex. It will of course get interpolated.\r\n  // The pattern matrix is a 3x3 scale matrix which 'tiles' the texture inside the tile, translating from tile coordinates\r\n  // (-4k to 8k -1) to texture coordinates.\r\n  v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\r\n}\r\n",
"url:esri/layers/vectorTiles/views/vectorTiles/renderers/shaders/patternFillShader.fs.glsl":"uniform lowp float u_opacity;\r\nuniform mediump vec2 u_pattern_tl;\r\nuniform mediump vec2 u_pattern_br;\r\nuniform sampler2D u_texture;\r\n\r\nvarying mediump vec2 v_tileTextureCoord;\r\n\r\nvoid main()\r\n{\r\n  // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\r\n  mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\r\n  // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\r\n  // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\r\n  // we need to only sample from area that has our sprite in the mosaic.\r\n  mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\r\n  // sample the sprite mosaic\r\n  lowp vec4 color \x3d texture2D(u_texture, samplePos);\r\n  gl_FragColor \x3d u_opacity * color;\r\n}\r\n"}});
define("esri/layers/vectorTiles/views/vectorTiles/renderers/BackgroundRenderer","require exports dojo/text!./shaders/background.vs.glsl dojo/text!./shaders/background.fs.glsl dojo/text!./shaders/patternFillShader.vs.glsl dojo/text!./shaders/patternFillShader.fs.glsl ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/vec4 ../../webgl/Program ../../webgl/VertexArrayObject ../../webgl/BufferObject".split(" "),function(w,x,r,s,t,u,q,v,h,k,l){return function(){function d(){this._patternMatrix=
q.create();this._color=v.create();this._initialized=!1}d.prototype.renderSolidColor=function(a,b){this._initialized||this._initialize(a);a.bindVAO(this._solidVertexArrayObject);a.bindProgram(this._solidProgram);this._solidProgram.setUniformMatrix4fv("u_transformMatrix",b.u_matrix);this._solidProgram.setUniform2fv("u_normalized_origin",b.u_normalized_origin);this._solidProgram.setUniform1f("u_coord_range",b.u_coord_range||4096);this._solidProgram.setUniform1f("u_depth",b.u_depth||0);this._solidProgram.setUniform4fv("u_color",
b.u_color||new Float32Array([1,0,0,1]));a.drawArrays(5,0,4);a.bindVAO()};d.prototype.render=function(a,b,c,e,m,f,g,d){this._initialized||this._initialize(a);var p=m.getPaintValue("background-color",b);d*=m.getPaintValue("background-opacity",b);var h=m.getPaintValue("background-pattern",b),k=void 0!==h,n=p[3]*d,l=k||1>n;if(!(l&&0===c)&&(l||1!==c)){if(k){a.bindVAO(this._patternVertexArrayObject);a.bindProgram(this._patternProgram);c=f.getMosaicItemPosition(h,!0);if(!c)return;b=e.coordRange/512/Math.pow(2,
Math.floor(b)-e.key.level)/g;q.identity(this._patternMatrix);g=1/(c.size[1]*b);this._patternMatrix[0]=1/(c.size[0]*b);this._patternMatrix[4]=g;f.bind(a,9729,0);this._patternProgram.setUniformMatrix4fv("u_transformMatrix",e.tileTransform.transform);this._patternProgram.setUniform2fv("u_normalized_origin",e.tileTransform.displayCoord);this._patternProgram.setUniform1f("u_depth",m.z);this._patternProgram.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix);this._patternProgram.setUniform1f("u_opacity",
d);this._patternProgram.setUniform2f("u_pattern_tl",c.tl[0],c.tl[1]);this._patternProgram.setUniform2f("u_pattern_br",c.br[0],c.br[1]);this._patternProgram.setUniform1i("u_texture",0)}else this._color[0]=n*p[0],this._color[1]=n*p[1],this._color[2]=n*p[2],this._color[3]=n,a.bindVAO(this._solidVertexArrayObject),a.bindProgram(this._solidProgram),this._solidProgram.setUniformMatrix4fv("u_transformMatrix",e.tileTransform.transform),this._solidProgram.setUniform2fv("u_normalized_origin",e.tileTransform.displayCoord),
this._solidProgram.setUniform1f("u_coord_range",e.coordRange),this._solidProgram.setUniform1f("u_depth",m.z||0),this._solidProgram.setUniform4fv("u_color",this._color);a.drawArrays(5,0,4);a.bindVAO()}};d.prototype._initialize=function(a){if(this._initialized)return!0;var b={a_pos:0},c=new h(a,r,s,b);if(!c)return!1;var e=new h(a,t,u,b);if(!e)return!1;var d={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},f=new Int8Array([0,0,1,0,0,1,1,1]),g=l.createVertex(a,35044,
f),g=new k(a,b,d,{geometry:g}),f=new Int16Array([0,0,4096,0,0,4096,4096,4096]),f=l.createVertex(a,35044,f);a=new k(a,b,{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:f});this._solidProgram=c;this._patternProgram=e;this._vertexAttributes=d;this._solidVertexArrayObject=g;this._patternVertexArrayObject=a;return this._initialized=!0};return d}()});