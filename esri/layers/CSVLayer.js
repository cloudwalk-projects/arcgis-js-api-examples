// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/accessorSupport/decorators dojo/_base/lang ../core/requireUtils ./FeatureLayer".split(" "),function(f,m,g,d,c,h,k,l){return function(e){function a(a,b){e.call(this);this.fields=[];this.delimiter=null;this.locationType="coordinates";this.longitudeField=this.latitudeField=null;this.outFields=["*"];this.operationalLayerType="CSV";this.type="csv"}g(a,e);a.prototype.normalizeCtorArgs=function(a,b){return"string"===
typeof a?h.mixin({},{url:a},b):a};a.prototype.readWebMapLabelsVisible=function(a,b){return null!=b.showLabels?b.showLabels:!(!b.drawingInfo||!b.drawingInfo.labelingInfo)};a.prototype.createGraphicsSource=function(){var a=this;return k.when(f,"./graphics/sources/CSVSource").then(function(b){return new b({url:a.url,delimiter:a.delimiter,latitudeField:a.latitudeField,longitudeField:a.longitudeField,fields:a.fields,outFields:a.outFields})}).then(function(b){a.fields=b.fields.map(function(a){return a});
a.delimiter=b.delimiter;a.latitudeField=b.latitudeField;a.longitudeField=b.longitudeField;return b})};a.prototype._verifyFields=function(){};d([c.property({json:{readFrom:"layerDefinition.fields"}})],a.prototype,"fields",void 0);d([c.property({json:{writeTo:"columnDelimiter",readFrom:"columnDelimiter"}})],a.prototype,"delimiter",void 0);d([c.property({json:{writeTo:"locationInfo.locationType",readFrom:"locationInfo.locationType"}})],a.prototype,"locationType",void 0);d([c.property({json:{writeTo:"locationInfo.latitudeFieldName",
readFrom:"locationInfo.latitudeFieldName"}})],a.prototype,"latitudeField",void 0);d([c.property({json:{writeTo:"locationInfo.longitudeFieldName",readFrom:"locationInfo.longitudeFieldName"}})],a.prototype,"longitudeField",void 0);d([c.property()],a.prototype,"outFields",void 0);d([c.property()],a.prototype,"operationalLayerType",void 0);d([c.read("web-map","labelsVisible",["drawingInfo.labelingInfo","showLabels"])],a.prototype,"readWebMapLabelsVisible",null);d([c.property({json:{readable:!1}})],a.prototype,
"type",void 0);return a=d([c.subclass("esri.layers.CSVLayer")],a)}(c.declared(l))});