// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define(["../../core/Accessor","dojo/_base/lang"],function(l,m){return l.createSubclass({declaredClass:"esri.layers.support.PixelBlock",normalizeCtorArgs:function(b){if(!b.width||Math.floor(b.width)!==b.width)throw"PixelBlock: incorrect width";if(!b.height||Math.floor(b.height)!==b.height)throw"PixelBlock: incorrect height";if(!b.pixels||!b.statistics)throw"PixelBlock: pixel data or statistics not present";},height:null,mask:null,pixels:[],pixelType:null,planes:null,statistics:[],width:null,getPlaneCount:function(){return this.pixels.length!==
this.statistics.length?console.error("Inconsistent pixel data and statistics"):this.statistics.length},addData:function(b){if(!b.pixels||!b.statistics)throw"Pixel data or statistics are not present";if(b.pixels.length!==this.width*this.height)throw"Inconsistent pixel data size";this.statistics.push(b.statistics);this.pixels.push(b.pixels)},getAsRGBA:function(){var b=new ArrayBuffer(4*this.width*this.height);switch(this.pixelType){case "s8":case "s16":case "u16":case "s32":case "u32":case "f32":case "f64":this._fillFromNon8Bit(b);
break;default:this._fillFrom8Bit(b)}return new Uint8ClampedArray(b)},getAsRGBAFloat:function(){var b=new Float32Array(4*this.width*this.height);this._fillFrom32Bit(b);return b},clone:function(){var b=new this.constructor;b.width=this.width;b.height=this.height;b.pixelType=this.pixelType;this.mask&&(b.mask=new Uint8Array(this.mask));var a,g;if(this.pixels){b.pixels=[];g=this.pixels.length;for(a=0;a<g;a++)b.pixels[a]=new Float32Array(this.pixels[a])}if(this.statistics){b.statistics=[];g=this.statistics.length;
for(a=0;a<g;a++)b.statistics[a]=m.clone(this.statistics[a])}return b},_fillFrom8Bit:function(b){var a=this.pixels,g=this.mask;if(!b||!a||!a.length)return console.error("Unable to convert to RGBA. The input pixel block is empty.");var e,c,d;e=c=d=a[0];3<=a.length&&(c=a[1],d=a[2]);var a=new Uint32Array(b),h=this.width*this.height;if(e.length!==h)return console.error("Unable to convert to RGBA. The pixelblock is invalid.");if(g&&g.length===h)for(b=0;b<h;b++)g[b]&&(a[b]=-16777216|d[b]<<16|c[b]<<8|e[b]);
else for(b=0;b<h;b++)a[b]=-16777216|d[b]<<16|c[b]<<8|e[b]},_fillFromNon8Bit:function(b){var a=this.pixels,g=this.mask,e=this.statistics;if(!b||!a||!a.length)return console.error("Unable to convert to RGBA. The input pixel block is empty.");var c=1,d=0;e&&0<e.length?(d=e[0].minValue,c=255/(e[0].maxValue-e[0].minValue)):(c=255,"s8"===this.pixelType?(d=-128,c=127):"u16"===this.pixelType?c=65535:"s16"===this.pixelType?(d=-32768,c=32767):"u32"===this.pixelType?c=4294967295:"s32"===this.pixelType?(d=-2147483648,
c=2147483647):"f32"===this.pixelType?(d=-3.4*1E39,c=3.4*1E39):"f64"===this.pixelType&&(d=-Number.MAX_VALUE,c=Number.MAX_VALUE),c=255/(c-d));b=new Uint32Array(b);var e=this.width*this.height,h,f,k;h=a[0];if(h.length!==e)return console.error("Unable to convert to RGBA. The pixelblock is invalid.");if(3<=a.length)if(f=a[1],k=a[2],g&&g.length===e)for(a=0;a<e;a++)g[a]&&(b[a]=-16777216|(k[a]-d)*c<<16|(f[a]-d)*c<<8|(h[a]-d)*c);else for(a=0;a<e;a++)b[a]=-16777216|(k[a]-d)*c<<16|(f[a]-d)*c<<8|(h[a]-d)*c;else if(g&&
g.length===e)for(a=0;a<e;a++)f=(h[a]-d)*c,g[a]&&(b[a]=-16777216|f<<16|f<<8|f);else for(a=0;a<e;a++)f=(h[a]-d)*c,b[a]=-16777216|f<<16|f<<8|f},_fillFrom32Bit:function(b){var a=this.pixels,g=this.mask;if(!b||!a||!a.length)return console.error("Unable to convert to RGBA. The input pixel block is empty.");var e,c,d;e=c=d=a[0];3<=a.length&&(c=a[1],d=a[2]);var h=this.width*this.height;if(e.length!==h)return console.error("Unable to convert to RGBA. The pixelblock is invalid.");var f=0;if(g&&g.length===h)for(a=
0;a<h;a++)b[f++]=e[a],b[f++]=c[a],b[f++]=d[a],b[f++]=g[a];else for(a=0;a<h;a++)b[f++]=e[a],b[f++]=c[a],b[f++]=d[a],b[f++]=255}})});