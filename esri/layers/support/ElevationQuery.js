// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define("require exports dojo/promise/all dojo/_base/lang ../../core/promiseUtils ../../core/Error ../../geometry/Point ../../geometry/Multipoint ../../geometry/Polyline ../../geometry/support/webMercatorUtils ../../geometry/support/scaleUtils ./ElevationTile".split(" "),function(s,q,t,u,g,l,x,y,z,r,v,w){s=function(){function f(){}f.prototype.queryAll=function(a,b,c){var e=this;if(!a.length)return g.reject(new l("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"));
b=m.fromGeometry(b);var d=!1;if(!c||!c.returnSampleInfo)d=!0;c=u.mixin(c,{returnSampleInfo:!0,demResolution:"auto"});a=a.slice();return this.query(a[a.length-1],b,c).then(function(b){return e._queryAllNext(a,b,c)}).then(function(a){a.geometry=a.geometry.export();d&&delete a.sampleInfo;return a})};f.prototype._queryAllNext=function(a,b,c){var e=this,d=a.pop();b.geometry.coordinates.forEach(function(a,c){0<=b.sampleInfo[c].demResolution&&!b.sampleInfo[c].source&&(b.sampleInfo[c].source=d)});if(!a.length)return g.resolve(b);
for(var h=b.geometry.coordinates,f=[],k=[],p=0;p<h.length;p++)0>b.sampleInfo[p].demResolution&&(f.push(h[p]),k.push(p));if(0===f.length)return g.resolve(b);f=b.geometry.clone(f);return this.query(a[a.length-1],f,c).then(function(d){k.forEach(function(a,c){h[a].z=d.geometry.coordinates[c].z;b.sampleInfo[a].demResolution=d.sampleInfo[c].demResolution});return e._queryAllNext(a,b,c)})};f.prototype.query=function(a,b,c){var e=this;if(!a)return g.reject(new l("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"));
if(!b||!(b instanceof m)&&"point"!==b.type&&"multipoint"!==b.type&&"polyline"!==b.type)return g.reject(new l("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation"));c=u.mixin({noDataValue:0,demResolution:"auto",maximumAutoTileRequests:20,returnSampleInfo:!1},c);var d={layer:a,geometry:null,options:c,outsideExtentTile:null,outSpatialReference:b.spatialReference};return g.resolve().then(function(){return a.load()}).then(function(){return e._createGeometryDescriptor(d,
b)}).then(function(){return e._selectTiles(d)}).then(function(){return e._populateElevationTiles(d)}).then(function(){return e._sampleGeometryWithElevation(d)}).then(function(){return e._createQueryResult(d)})};f.prototype._createQueryResult=function(a){var b={geometry:(a.outSpatialReference.equals(a.geometry.spatialReference)?a.geometry:a.geometry.project(a.outSpatialReference)).export(),noDataValue:a.options.noDataValue};a.options.returnSampleInfo&&(b.sampleInfo=this._extractSampleInfo(a));a.geometry.coordinates.forEach(function(a){a.tile=
null;a.elevationTile=null});return b};f.prototype._createGeometryDescriptor=function(a,b){var c,e=a.layer.tileInfo.spatialReference;c=b instanceof m?b.project(e):r.project(b,e);if(!c)return g.reject(new l("elevation-query:spatial-reference-mismatch","Cannot query elevation in '"+b.spatialReference.wkid+"' on an elevation service in '"+e.wkid+"'"));a.geometry=m.fromGeometry(c);return g.resolve()};f.prototype._selectTiles=function(a){var b=a.options.demResolution;this._preselectOutsideLayerExtent(a);
return"number"===typeof b?this._selectTilesClosestResolution(a):"finest-contiguous"===b?this._selectTilesFinestContiguous(a):"auto"===b?this._selectTilesAuto(a):g.reject(new l("elevation-query:invalid-dem-resolution","Invalid dem resolution value '"+b+'\', expected a number, "finest-contiguous" or "auto"'))};f.prototype._preselectOutsideLayerExtent=function(a){var b=new w.ElevationTile(null);b.sample=function(b,d){return a.options.noDataValue};a.outsideExtentTile=b;var c=a.layer.fullExtent;a.geometry.coordinates.forEach(function(a){var d=
a.x,h=a.y;if(d<c.xmin||d>c.xmax||h<c.ymin||h>c.ymax)a.elevationTile=b})};f.prototype._selectTilesClosestResolution=function(a){var b=a.layer.tileInfo,c=this._findNearestDemResolutionLevel(b,a.options.demResolution);a.geometry.coordinates.forEach(function(a){a.tile=b.tileAt(c,a.x,a.y)});return g.resolve()};f.prototype._findNearestDemResolutionLevel=function(a,b){for(var c=v.getUnitValueForSR(a.spatialReference),c=b/c,e=a.lods[0],d=1;d<a.lods.length;d++){var h=a.lods[d];Math.abs(h.resolution-c)<Math.abs(e.resolution-
c)&&(e=h)}return e.level};f.prototype._selectTilesFinestContiguous=function(a){return this._selectTilesFinestContiguousAt(a,a.layer.tileInfo.lods.length-1)};f.prototype._selectTilesFinestContiguousAt=function(a,b){var c=this,e=a.layer,d=a.geometry;if(0>b)return d.coordinates.forEach(function(a){return a.tile=null}),g.resolve();var h=e.tilemapCache,f=e.tileInfo,k=f.lods[b];d.coordinates.forEach(function(a){a.tile=f.tileAt(k.level,a.x,a.y)});e=this._selectTilesToFetch(d.coordinates);return(h?t(e.map(function(a){return h.fetchAvailability(a.level,
a.row,a.col)})):this._populateElevationTiles(a).then(function(){if(d.coordinates.some(function(a){return!a.elevationTile}))return d.coordinates.filter(function(b){return b.elevationTile!==a.outsideExtentTile}).forEach(function(a){return a.elevationTile=null}),g.reject()})).then(function(){return d}).otherwise(function(){return c._selectTilesFinestContiguousAt(a,b-1)})};f.prototype._populateElevationTiles=function(a){var b=a.options.noDataValue,c={},e=this._selectTilesToFetch(a.geometry.coordinates).map(function(d){return a.layer.fetchTile(d.level,
d.row,d.col,b).then(function(a){return c[d.id]=new w.ElevationTile(d,a)})});return g.eachAlways(e).then(function(){a.geometry.coordinates.forEach(function(a){!a.elevationTile&&a.tile&&(a.elevationTile=c[a.tile.id])})})};f.prototype._selectTilesToFetch=function(a){var b={},c=[];a.forEach(function(a){var d=a.tile;!a.elevationTile&&(a.tile&&!b[d.id])&&(b[d.id]=d,c.push(d))});return c};f.prototype._selectTilesAuto=function(a){var b=a.geometry.coordinates;this._selectTilesAutoFinest(a);this._reduceTilesForMaximumRequests(a);
var c=a.layer.tilemapCache;if(c){var e={};a=this._selectTilesToFetch(b).map(function(a){var b={id:null,level:0,row:0,col:0,extent:[0,0,0,0]};return c.fetchAvailabilityUpsample(a.level,a.row,a.col,b).then(function(){return e[a.id]=b}).otherwise(function(){})});return t(a).then(function(){return b.forEach(function(a){return a.tile=e[a.tile.id]})})}return this._selectTilesAutoPrefetchUpsample(a)};f.prototype._reduceTilesForMaximumRequests=function(a){var b=a.geometry.coordinates,c=a.layer.tileInfo,e=
0,d={},h=function(a){a.id in d?d[a.id]++:(d[a.id]=1,e++)},f=function(a){var b=d[a.id];1===b?(delete d[a.id],e--):d[a.id]=b-1};b.forEach(function(a){a.tile&&!a.elevationTile&&h(a.tile)});for(var k=!0;k;){for(var k=!1,g=0;g<b.length;g++){var n=b[g];if(!n.elevationTile||n.tile){if(e<=a.options.maximumAutoTileRequests)return;f(n.tile);c.upsampleTile(n.tile)&&(k=!0);h(n.tile)}}if(!k)break}};f.prototype._selectTilesAutoFinest=function(a){var b=a.layer.tileInfo,c=b.lods[b.lods.length-1].level;a.geometry.coordinates.forEach(function(a){return a.tile=
b.tileAt(c,a.x,a.y)})};f.prototype._selectTilesAutoPrefetchUpsample=function(a){var b=this,c=a.geometry.coordinates,e=a.layer.tileInfo;return this._populateElevationTiles(a).then(function(){var d=!1;c.forEach(function(a){!a.elevationTile&&a.tile&&(e.upsampleTile(a.tile)?d=!0:a.tile=null)});if(d)return b._selectTilesAutoPrefetchUpsample(a)})};f.prototype._sampleGeometryWithElevation=function(a){a.geometry.coordinates.forEach(function(b){var c=b.elevationTile,e=a.options.noDataValue;c&&(c=c.sample(b.x,
b.y),void 0!==c?e=c:b.elevationTile=null);b.z=e})};f.prototype._extractSampleInfo=function(a){var b=a.layer.tileInfo,c=v.getUnitValueForSR(b.spatialReference);return a.geometry.coordinates.map(function(e){var d=-1;e.elevationTile&&e.elevationTile!==a.outsideExtentTile&&(d=b.lodAt(e.elevationTile.tile.level).resolution*c);return{demResolution:d}})};return f}();q.ElevationQuery=s;var m=function(){function f(){}f.prototype.export=function(){return this._exporter(this.coordinates,this.spatialReference)};
f.prototype.clone=function(a){var b=this,c=new f;c.geometry=this.geometry;c.spatialReference=this.spatialReference;c.coordinates=a||this.coordinates.map(function(a){return b._cloneCoordinate(a)});c._exporter=this._exporter;return c};f.prototype.project=function(a){var b=this;if(this.spatialReference.equals(a))return this.clone();if(r.canProject(this.spatialReference,a)){var c=a.isWGS84?r.xyToLngLat:r.lngLatToXY,e=[0,0],d=this.coordinates.map(function(a){a=b._cloneCoordinate(a);c(a.x,a.y,!1,e);a.x=
e[0];a.y=e[1];return a}),d=this.clone(d);d.spatialReference=a;return d}return null};f.prototype._cloneCoordinate=function(a){return{x:a.x,y:a.y,z:a.z,tile:null,elevationTile:null}};f.fromGeometry=function(a){var b=new f;b.geometry=a;b.spatialReference=a.spatialReference;if(a instanceof f)b.coordinates=a.coordinates.map(function(a){return b._cloneCoordinate(a)}),b._exporter=function(b,c){var d=a.clone(b);d.spatialReference=c;return d};else switch(a.type){case "point":b.coordinates=[{x:a.x,y:a.y}];
b._exporter=function(a,b){return new x(a[0].x,a[0].y,a[0].z,b)};break;case "multipoint":b.coordinates=a.points.map(function(a){return{x:a[0],y:a[1]}});b._exporter=function(a,b){return new y(a.map(function(a){return[a.x,a.y,a.z]}),b)};break;case "polyline":var c=[],e=[],d=0;a.paths.forEach(function(a){e.push([d,d+a.length]);d+=a.length;c.push.apply(c,a.map(function(a){return{x:a[0],y:a[1]}}))});b.coordinates=c;b._exporter=function(a,b){var c=a.map(function(a){return[a.x,a.y,a.z]}),d=e.map(function(a){return c.slice(a[0],
a[1])});return new z(d,b)}}return b};return f}();q.GeometryDescriptor=m;Object.defineProperty(q,"__esModule",{value:!0});q.default=s});