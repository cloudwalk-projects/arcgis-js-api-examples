// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define(["require","exports"],function(m,n){return function(){function a(){this.elevationDirtyGraphicsQueue=[];this.elevationDirtyGraphicsSet={};this.elevationUpdateEventHandle=null;this.eventHandles=[];this.updateElevation=!1;this.graphicsCore=this.layerView=null}a.prototype.initialize=function(b,f,a,k){var e=this;this.layerView=b;this.graphicsCore=a;this.elevationChangedCallback=f;this.elevationUpdateEventHandle=k.on("elevation-change",function(b){return e.elevationUpdateHandler(b)});this.eventHandles.push(this.layerView.watch("suspended",
function(){return e.suspendedChange()}))};a.prototype.destroy=function(){this.elevationDirtyGraphicsSet=this.elevationDirtyGraphicsQueue=null;this.elevationUpdateEventHandle&&(this.elevationUpdateEventHandle.remove(),this.elevationUpdateEventHandle=null);this.eventHandles.forEach(function(b){return b.remove()});this.elevationChangedCallback=this.graphicsCore=this.layerView=this.eventHandles=null};a.prototype.clear=function(){this.elevationDirtyGraphicsSet={};this.elevationDirtyGraphicsQueue=[]};a.prototype.suspendedChange=
function(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&this.markAllGraphicsElevationDirty()};a.prototype.isUpdating=function(){return 0<this.elevationDirtyGraphicsQueue.length};a.prototype.numNodesUpdating=function(){return this.elevationDirtyGraphicsQueue.length};a.prototype.needsIdleUpdate=function(){return this.layerView.view.basemapTerrain&&0<this.elevationDirtyGraphicsQueue.length};a.prototype.idleUpdate=function(b){if(!b.done()){var a=
this.layerView.view,c=this.elevationDirtyGraphicsQueue.length;if(0<c){for(var k=this.graphicsCore.stageLayer.getId(),e=this.graphicsCore.labelStageLayer?this.graphicsCore.labelStageLayer.getId():null,l=0,d=0,d=0;d<c;d++){var g=this.elevationDirtyGraphicsQueue[d],h=this.graphicsCore.graphics[g];h&&h.alignWithElevation(a.basemapTerrain,a.renderCoordsHelper);delete this.elevationDirtyGraphicsSet[g];l++;if(20<=l){a._stage.processDirtyLayer(k);null!=e&&a._stage.processDirtyLayer(e);if(b.done())break;l=
0}}a._stage.processDirtyLayer(k);null!=e&&a._stage.processDirtyLayer(e);this.elevationDirtyGraphicsQueue.splice(0,d+1);a.labelManager.setDirty();this.layerView._evaluateUpdatingState()}}};a.prototype.markAllGraphicsElevationDirty=function(){for(var a in this.graphicsCore.graphics)this.markGraphicElevationDirty(this.graphicsCore.graphics[a].graphic.uid);this.layerView._evaluateUpdatingState()};a.prototype.markGraphicElevationDirty=function(a){this.elevationDirtyGraphicsSet[a]||(this.elevationDirtyGraphicsSet[a]=
!0,this.elevationDirtyGraphicsQueue.push(a))};a.prototype.elevationUpdateHandler=function(a){var f=this,c=a.extent;if(this.layerView.suspended){if(!this.updateElevation&&(a=this.graphicsCore.computedExtent)&&c[2]>a.xmin&&c[0]<a.xmax&&c[3]>a.ymin&&c[1]<a.ymax)this.updateElevation=!0}else-Infinity===c[0]?this.markAllGraphicsElevationDirty():this.elevationChangedCallback(c,a.spatialReference,function(a,c){for(var b=!1,d=0;d<c;d++){var g=a[d],h=f.graphicsCore.graphics[g];h&&h.mustAlignToTerrain()&&(f.markGraphicElevationDirty(g),
b=!0)}b&&f.layerView._evaluateUpdatingState()})};return a}()});