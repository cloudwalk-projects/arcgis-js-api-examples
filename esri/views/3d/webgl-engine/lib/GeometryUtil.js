// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define(["./GeometryData","./BufferVectorMath","./Util","./gl-matrix"],function(A,T,I,U){function Q(c,g,a,e,d){if(Math.abs(b.dot(g,c))>d)return!1;b.cross(c,g,a);b.normalize(a);b.cross(a,c,e);b.normalize(e);return!0}function R(c,g,a,e,d,f,k){return Q(c,g,d,f,k)||Q(c,a,d,f,k)||Q(c,e,d,f,k)}var b=U.vec3,M=U.vec3d,l=I.VertexAttrConstants,E=T.Vec3Compact,G=M.create(),V=M.create(),S={createSphereGeometry:function(c,g,a,e,d,f,k){c=c||50;e=void 0!==e?e:-Math.PI;d=void 0!==d?d:2*Math.PI;f=void 0!==f?f:0.5*
-Math.PI;k=void 0!==k?k:Math.PI;var h=Math.max(3,Math.floor(g)||8),n=Math.max(2,Math.floor(a)||6),m=(h+1)*(n+1);a=new Float32Array(3*m);g=new Float32Array(3*m);var m=new Float32Array(2*m),q,r,v=[],w=b.create(),t=0;for(r=0;r<=n;r++){var p=[],s=r/n,u=f+s*k,x=Math.cos(u);for(q=0;q<=h;q++){var J=q/h,y=e+J*d,B=Math.cos(y)*x*c,N=Math.sin(u)*c,y=-Math.sin(y)*x*c;a[3*t]=B;a[3*t+1]=N;a[3*t+2]=y;b.set3(B,N,y,w);b.normalize(w);g[3*t]=w[0];g[3*t+1]=w[1];g[3*t+2]=w[2];m[2*t]=J;m[2*t+1]=s;p.push(t);++t}v.push(p)}c=
new Uint32Array(3*2*h*(n-1));for(r=t=0;r<n;r++)for(q=0;q<h;q++)e=v[r][q],d=v[r][q+1],f=v[r+1][q+1],k=v[r+1][q],0===r?(c[t++]=e,c[t++]=f,c[t++]=k):r===n-1?(c[t++]=e,c[t++]=d,c[t++]=f):(c[t++]=e,c[t++]=d,c[t++]=f,c[t++]=f,c[t++]=k,c[t++]=e);I.assert(t===c.length);h={};h[l.POSITION]=c;h[l.NORMAL]=c;h[l.UV0]=c;n={};n[l.POSITION]={size:3,data:a};n[l.NORMAL]={size:3,data:g};n[l.UV0]={size:2,data:m};return new A([{type:"triangle",indices:h,positionKey:l.POSITION}],n)},createPolySphereGeometry:function(c,
g,a){function e(a,d){a>d&&(a=d+(d=a,0));var e=a.toString()+"."+d.toString();if(k[e])return k[e];var g=f.length;f.length+=3;E.add(f,3*a,f,3*d,f,g);E.scale(f,g,c/E.length(f,g));g/=3;return k[e]=g}var d=c,f;a?(f=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],d=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]):(a=d*(1+Math.sqrt(5))/2,f=[-d,a,0,d,a,0,-d,-a,0,d,-a,0,0,-d,a,0,d,a,0,-d,-a,0,d,-a,a,0,-d,a,0,d,-a,0,-d,-a,0,d],d=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,
6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]);for(a=0;a<f.length;a+=3)E.scale(f,a,c/E.length(f,a));var k={};for(a=0;a<g;a++){for(var h=d.length,b=Array(4*h),m=0;m<h;m+=3){var q=d[m],r=d[m+1],v=d[m+2],w=e(q,r),t=e(r,v),p=e(v,q),s=4*m;b[s]=q;b[s+1]=w;b[s+2]=p;b[s+3]=r;b[s+4]=t;b[s+5]=w;b[s+6]=v;b[s+7]=p;b[s+8]=t;b[s+9]=w;b[s+10]=t;b[s+11]=p}d=b;k={}}g=new Float32Array(f);for(a=0;a<g;a+=3)E.normalize(g,a);f=new Float32Array(f);a={};a[l.POSITION]=d;a[l.NORMAL]=d;d={};d[l.POSITION]={size:3,data:f};d[l.NORMAL]=
{size:3,data:g};return new A([{type:"triangle",indices:a,positionKey:l.POSITION}],d)},createPointGeometry:function(c,g,a,e,d,f,k,b){var n=new Float32Array(3);n[0]=g?g[0]:0;n[1]=g?g[1]:0;n[2]=g?g[2]:0;g=new Float32Array(3);g[0]=c?c[0]:0;g[1]=c?c[1]:0;g[2]=c?c[2]:1;if(null==k)c=new Float32Array(2),c[0]=0,c[1]=0;else{c=new Float32Array(k.length);for(var m=0;m<k.length;m++)c[m]=k[m]}k=new Uint8Array(4);k[0]=a?255*a[0]:255;k[1]=a?255*a[1]:255;k[2]=a?255*a[2]:255;k[3]=a&&3<a.length?255*a[3]:255;a=new Float32Array(2);
a[0]=null!=e&&2==e.length?e[0]:1;a[1]=null!=e&&2==e.length?e[1]:1;if(null!=f){var q=new Float32Array(4);q[0]=f[0];q[1]=f[1];q[2]=f[2];q[3]=f[3]}if(null!=b){var r=new Float32Array(4);r[0]=b[0];r[1]=b[1];r[2]=b[2];r[3]=b[3]}m=new Uint32Array(1);m[0]=0;e={};e[l.POSITION]=m;e[l.NORMAL]=m;e[l.UV0]=m;e[l.COLOR]=m;e[l.SIZE]=m;null!=f&&(e[l.AUXPOS1]=m);null!=b&&(e[l.AUXPOS2]=m);m={};m[l.POSITION]={size:3,data:n};m[l.NORMAL]={size:3,data:g};m[l.UV0]={size:c.length,data:c};m[l.COLOR]={size:4,data:k};m[l.SIZE]=
{size:2,data:a};null!=f&&(m[l.AUXPOS1]={size:4,data:q});null!=b&&(m[l.AUXPOS2]={size:4,data:r});f=[{type:"point",indices:e,positionKey:l.POSITION}];return d?{faces:f[0],vertexAttr:m,id:A.getNewId().toString()}:new A(f,m)},createPointArrayGeometry:function(c,g){for(var a=new Float32Array(3*c.length),e=new Float32Array(g?3*c.length:3),d=new Uint32Array(c.length),f=new Uint32Array(c.length),b=0;b<c.length;b++)a[3*b]=c[b][0],a[3*b+1]=c[b][1],a[3*b+2]=c[b][2],g&&(e[3*b]=g[b][0],e[3*b+1]=g[b][1],e[3*b+
2]=g[b][2]),d[b]=b,f[b]=0;g||(e[0]=0,e[1]=1,e[2]=0);b=new Float32Array(2);b[0]=0;b[1]=0;var h={};h[l.POSITION]=d;h[l.NORMAL]=g?d:f;h[l.UV0]=f;d={};d[l.POSITION]={size:3,data:a};d[l.NORMAL]={size:3,data:e};d[l.UV0]={size:2,data:b};return new A([{type:"point",indices:h,positionKey:l.POSITION}],d)},createTriangleGeometry:function(){var c=new Float32Array(9);c[0]=0;c[1]=0;c[2]=0;c[3]=0;c[4]=0;c[5]=100;c[6]=100;c[7]=0;c[8]=0;var g=new Uint32Array(3);g[0]=0;g[1]=1;g[2]=2;var a=new Float32Array(3);a[0]=
0;a[1]=1;a[2]=0;var e=new Uint32Array(3);e[0]=0;e[1]=0;e[2]=0;var d=new Float32Array(2);d[0]=0;d[1]=0;var b=new Uint32Array(3);b[0]=0;b[1]=0;b[2]=0;var k={};k[l.POSITION]=g;k[l.NORMAL]=e;k[l.UV0]=b;g={};g[l.POSITION]={size:3,data:c};g[l.NORMAL]={size:3,data:a};g[l.UV0]={size:2,data:d};return new A([{type:"triangle",indices:k,positionKey:l.POSITION}],g)},createSquareGeometry:function(c,b){var a,e,d=new Float32Array(12);if(c)for(a=0;4>a;a++)for(e=0;3>e;e++)d[3*a+e]=c[a][e];else d[0]=-1,d[1]=-1,d[2]=
0,d[3]=1,d[4]=-1,d[5]=0,d[6]=1,d[7]=1,d[8]=0,d[9]=-1,d[10]=1,d[11]=0;var f=new Uint32Array(6);f[0]=0;f[1]=1;f[2]=2;f[3]=2;f[4]=3;f[5]=0;e=new Float32Array(3);e[0]=0;e[1]=0;e[2]=1;var k=new Uint32Array(6);for(a=0;6>a;a++)k[a]=0;a=new Float32Array(8);a[0]=0;a[1]=0;a[2]=1;a[3]=0;a[4]=1;a[5]=1;a[6]=0;a[7]=1;var h=new Uint8Array(4);h[0]=255;h[1]=255;h[2]=255;h[3]=255;var n={};n[l.POSITION]=f;n[l.NORMAL]=k;n[l.UV0]=f;n[l.COLOR]=k;f={};f[l.POSITION]={size:3,data:d};f[l.NORMAL]={size:3,data:e};f[l.UV0]={size:2,
data:a};f[l.COLOR]={size:4,data:h};d=[{type:"triangle",indices:n,positionKey:l.POSITION}];return b?{faces:d[0],vertexAttr:f,id:A.getNewId().toString()}:new A(d,f)},createBoxGeometry:function(){var c,b,a=[[-0.5,-0.5,0.5],[0.5,-0.5,0.5],[0.5,0.5,0.5],[-0.5,0.5,0.5],[-0.5,-0.5,-0.5],[0.5,-0.5,-0.5],[0.5,0.5,-0.5],[-0.5,0.5,-0.5]],e=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],d=[0,0,1,0,1,1,0,1],f=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],k=Array(36);for(c=0;6>c;c++)for(b=
0;6>b;b++)k[6*c+b]=c;var h=Array(36);for(c=0;6>c;c++)h[6*c+0]=0,h[6*c+1]=1,h[6*c+2]=2,h[6*c+3]=2,h[6*c+4]=3,h[6*c+5]=0;return function(c){var b;Array.isArray(c)||(c=[c,c,c]);var g=new Float32Array(24);for(b=0;8>b;b++)g[3*b]=a[b][0]*c[0],g[3*b+1]=a[b][1]*c[1],g[3*b+2]=a[b][2]*c[2];c={};c[l.POSITION]=new Uint8Array(f);c[l.NORMAL]=new Uint8Array(k);c[l.UV0]=new Uint8Array(h);b={};b[l.POSITION]={size:3,data:g};b[l.NORMAL]={size:3,data:new Float32Array(e)};b[l.UV0]={size:2,data:new Float32Array(d)};return new A([{type:"triangle",
indices:c,positionKey:l.POSITION}],b)}}(),createDiamondGeometry:function(){var c=[[-0.5,0,-0.5],[0.5,0,-0.5],[0.5,0,0.5],[-0.5,0,0.5],[0,-0.5,0],[0,0.5,0]],b=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],a=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],e=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];return function(d){var f;Array.isArray(d)||(d=[d,d,d]);var k=new Float32Array(18);for(f=0;6>f;f++)k[3*f]=c[f][0]*d[0],k[3*f+1]=c[f][1]*d[1],k[3*f+2]=c[f][2]*d[2];d={};d[l.POSITION]=
new Uint8Array(a);d[l.NORMAL]=new Uint8Array(e);f={};f[l.POSITION]={size:3,data:k};f[l.NORMAL]={size:3,data:new Float32Array(b)};return new A([{type:"triangle",indices:d,positionKey:l.POSITION}],f)}}(),createTetrahedronGeometry:function(){var c=b.createFrom(-0.5,0,-0.5),g=b.createFrom(0.5,0,-0.5),a=b.createFrom(0,0,0.5),e=b.createFrom(0,0.5,0),d=b.create(),f=b.create(),k=b.create(),h=b.create(),n=b.create();b.subtract(c,e,d);b.subtract(c,g,f);b.cross(d,f,k);b.normalize(k,k);b.subtract(g,e,d);b.subtract(g,
a,f);b.cross(d,f,h);b.normalize(h,h);b.subtract(a,e,d);b.subtract(a,c,f);b.cross(d,f,n);b.normalize(n,n);var m=[c,g,a,e],q=[0,-1,0,k[0],k[1],k[2],h[0],h[1],h[2],n[0],n[1],n[2]],r=[0,1,2,3,1,0,3,2,1,3,0,2],v=[0,0,0,1,1,1,2,2,2,3,3,3];return function(a){var c;Array.isArray(a)||(a=[a,a,a]);var b=new Float32Array(12);for(c=0;4>c;c++)b[3*c]=m[c][0]*a[0],b[3*c+1]=m[c][1]*a[1],b[3*c+2]=m[c][2]*a[2];a={};a[l.POSITION]=new Uint8Array(r);a[l.NORMAL]=new Uint8Array(v);c={};c[l.POSITION]={size:3,data:b};c[l.NORMAL]=
{size:3,data:new Float32Array(q)};return new A([{type:"triangle",indices:a,positionKey:l.POSITION}],c)}}(),createConeGeometry:function(c,g,a,e){var d=0,f=b.createFrom(0,d,0),k=b.createFrom(0,d+c,0),h=b.createFrom(0,-1,0),n=b.createFrom(0,1,0);e&&(d=c,k=b.createFrom(0,0,0),f=b.createFrom(0,d,0),h=b.createFrom(0,1,0),n=b.createFrom(0,-1,0));var f=[k,f],h=[h,n],n=a+2,m=0,k=Math.sqrt(c*c+g*g);if(e)for(e=a-1;0<=e;e--)m=e*(2*Math.PI/a),q=b.createFrom(Math.cos(m)*g,d,Math.sin(m)*g),f.push(q),m=b.createFrom(c*
Math.cos(m)/k,-g/k,c*Math.sin(m)/k),h.push(m);else for(e=0;e<a;e++){var m=e*(2*Math.PI/a),q=b.createFrom(Math.cos(m)*g,d,Math.sin(m)*g);f.push(q);m=b.createFrom(c*Math.cos(m)/k,g/k,c*Math.sin(m)/k);h.push(m)}c=new Uint32Array(6*(a+2));a=new Uint32Array(6*(a+2));d=g=0;for(e=3;e<f.length;e++)c[g++]=1,c[g++]=e-1,c[g++]=e,a[d++]=0,a[d++]=0,a[d++]=0;c[g++]=f.length-1;c[g++]=2;c[g++]=1;a[d++]=0;a[d++]=0;a[d++]=0;for(e=3;e<f.length;e++)c[g++]=e,c[g++]=e-1,c[g++]=0,a[d++]=e,a[d++]=e-1,a[d++]=1;c[g++]=0;c[g++]=
2;c[g++]=f.length-1;a[d++]=1;a[d++]=2;a[d++]=h.length-1;d=1;Array.isArray(d)||(d=[d,d,d]);g=new Float32Array(3*n);for(e=0;e<n;e++)g[3*e]=f[e][0]*d[0],g[3*e+1]=f[e][1]*d[1],g[3*e+2]=f[e][2]*d[2];f=new Float32Array(3*n);for(e=0;e<n;e++)f[3*e]=h[e][0],f[3*e+1]=h[e][1],f[3*e+2]=h[e][2];h={};h[l.POSITION]=c;h[l.NORMAL]=a;n={};n[l.POSITION]={size:3,data:g};n[l.NORMAL]={size:3,data:f};return new A([{type:"triangle",indices:h,positionKey:l.POSITION}],n)},createCylinderGeometry:function(c,g,a,e,d,f){e||(e=
b.createFrom(1,0,0));d||(d=b.createFrom(0,0,0));f=void 0===f?!0:f;var k=b.create();b.normalize(e,k);e=b.create();b.scale(k,Math.abs(c),e);var h=b.create();b.scale(e,-0.5,h);b.add(h,d);var n=b.createFrom(0,1,0);Math.abs(0.2>1-b.dot(k,n))&&b.set3(0,0,1,n);var m=b.create();b.cross(k,n,m);b.normalize(m);b.cross(m,k,n);var q=2*a+(f?2:0),r=a+(f?2:0);d=new Float32Array(3*q);c=new Float32Array(3*r);var v=new Float32Array(2*q),w=new Uint32Array(3*a*(f?4:2)),t=new Float32Array(3*a*(f?4:2));f&&(d[3*(q-2)+0]=
h[0],d[3*(q-2)+1]=h[1],d[3*(q-2)+2]=h[2],v[2*(q-2)]=0,v[2*(q-2)+1]=0,d[3*(q-1)+0]=d[3*(q-2)+0]+e[0],d[3*(q-1)+1]=d[3*(q-2)+1]+e[1],d[3*(q-1)+2]=d[3*(q-2)+2]+e[2],v[2*(q-1)]=1,v[2*(q-1)+1]=1,c[3*(r-2)+0]=-k[0],c[3*(r-2)+1]=-k[1],c[3*(r-2)+2]=-k[2],c[3*(r-1)+0]=k[0],c[3*(r-1)+1]=k[1],c[3*(r-1)+2]=k[2]);var k=function(a,c,b){w[a]=c;t[a]=b},p,s,u=0,x=b.create(),J=b.create();for(p=0;p<a;p++)s=p*(2*Math.PI/a),b.scale(n,Math.sin(s),x),b.scale(m,Math.cos(s),J),b.add(x,J),c[3*p+0]=x[0],c[3*p+1]=x[1],c[3*p+
2]=x[2],b.scale(x,g),b.add(x,h),d[3*p+0]=x[0],d[3*p+1]=x[1],d[3*p+2]=x[2],v[2*p+0]=p/a,v[2*p+1]=0,d[3*(p+a)+0]=d[3*p+0]+e[0],d[3*(p+a)+1]=d[3*p+1]+e[1],d[3*(p+a)+2]=d[3*p+2]+e[2],v[2*(p+a)+0]=p/a,v[2*p+1]=1,s=(p+1)%a,k(u++,p,p),k(u++,p+a,p),k(u++,s,s),k(u++,s,s),k(u++,p+a,p),k(u++,s+a,s);if(f){for(p=0;p<a;p++)s=(p+1)%a,k(u++,q-2,r-2),k(u++,p,r-2),k(u++,s,r-2);for(p=0;p<a;p++)s=(p+1)%a,k(u++,p+a,r-1),k(u++,q-1,r-1),k(u++,s+a,r-1)}g={};g[l.POSITION]=w;g[l.NORMAL]=t;g[l.UV0]=w;a={};a[l.POSITION]={size:3,
data:d};a[l.NORMAL]={size:3,data:c};a[l.UV0]={size:2,data:v};return new A([{type:"triangle",indices:g,positionKey:l.POSITION}],a)},createTubeGeometry:function(c,b,a,e,d){a=a||10;e=null!=e?e:!0;I.assert(1<c.length);for(var f=[],k=[],h=0;h<a;h++){f.push([0,-h-1,-((h+1)%a)-1]);var l=2*(h/a)*Math.PI;k.push([Math.cos(l)*b,Math.sin(l)*b])}return S.createPathExtrusionGeometry(k,c,[[0,0,0]],f,e,d)},createSquareTubeGeometry:function(c,b,a){a=a||!0;I.assert(1<c.length);b*=Math.SQRT2;return S.createPathExtrusionGeometry([[b,
b],[-b,b],[-b,-b],[b,-b]],c,[],[[-1,-2,-3],[-3,-4,-1]],a,[[0,1],[-1,0],[0,-1],[1,0]])},createPathExtrusionGeometry:function(c,g,a,e,d,f,k){var h,n=c.length,m=new Float32Array(3*g.length*n+(6*a.length||0)),q=new Float32Array(g.length*n+(2*a.length||0)),r=new Float32Array(3*g.length*n+(a?6:0)),v=0,w=0,t=0,p=65535<m.length/3?Uint32Array:Uint16Array,s=6*(g.length-1)*n+6*e.length,u=new p(s),p=new p(s),x=s=0,J=b.create(),y=b.create(),B=b.create(),N=b.create(),I=b.create(),E=b.create(),G=b.create(),M=b.create(),
z=b.create(),K=b.create(),C=b.create(),O=b.create();b.set3(0,1,0,O);b.subtract(g[1],g[0],y);b.normalize(y);d?(b.add(g[0],f,C),b.normalize(C,B)):b.set3(0,0,1,B);R(y,B,O,O,E,B,0.99619469809);b.set(B,N);for(h=0;h<a.length;h++)b.scale(E,a[h][0],z),b.scale(B,a[h][2],C),b.add(z,C),b.add(z,g[0]),m[v++]=z[0],m[v++]=z[1],m[v++]=z[2],q[t++]=0;r[w++]=-y[0];r[w++]=-y[1];r[w++]=-y[2];for(h=0;h<e.length;h++)u[s++]=0<e[h][0]?e[h][0]:-e[h][0]-1+a.length,u[s++]=0<e[h][1]?e[h][1]:-e[h][1]-1+a.length,u[s++]=0<e[h][2]?
e[h][2]:-e[h][2]-1+a.length,p[x++]=0,p[x++]=0,p[x++]=0;var D=a.length;h=a.length-1;for(var P,L=0;L<g.length;L++){P=!1;0<L&&(d?(b.add(g[L],f,C),b.normalize(C,B)):b.set3(0,0,1,B),b.set(y,J),b.set(J,C),L<g.length-1?(b.subtract(g[L+1],g[L],y),b.normalize(y),b.add(C,y)):P=!0,R(C,B,N,O,E,B,0.99619469809),b.set(B,N));k&&(R(y,B,N,O,M,G,0.99619469809),b.set(G,I));for(var F=0;F<n;F++)if(b.scale(E,c[F][0],z),b.scale(B,c[F][1],C),b.add(z,C),k?(b.scale(M,k[F][0],K),b.scale(G,k[F][1],C),b.add(K,C),b.normalize(K),
b.scale(K,-1)):b.normalize(z,K),r[w++]=K[0],r[w++]=K[1],r[w++]=K[2],b.add(z,g[L]),m[v++]=z[0],m[v++]=z[1],m[v++]=z[2],q[t++]=c[F][1],!P){var H=(F+1)%n;u[s++]=D+F;u[s++]=D+n+F;u[s++]=D+H;u[s++]=D+H;u[s++]=D+n+F;u[s++]=D+n+H;if(k)for(H=0;6>H;H++)p[x++]=D-h+F;else for(H=0;6>H;H++)p[x++]=u[s-6+H]-h}D+=n}P=g[g.length-1];for(h=0;h<a.length;h++)b.scale(E,a[h][0],z),b.scale(B,a[h][1],C),b.add(z,C),b.add(z,P),m[v++]=z[0],m[v++]=z[1],m[v++]=z[2],q[t++]=0;c=w/3;r[w++]=y[0];r[w++]=y[1];r[w++]=y[2];n=D-n;for(h=
0;h<e.length;h++)u[s++]=0<=e[h][0]?D+e[h][0]:-e[h][0]-1+n,u[s++]=0<=e[h][2]?D+e[h][2]:-e[h][2]-1+n,u[s++]=0<=e[h][1]?D+e[h][1]:-e[h][1]-1+n,p[x++]=c,p[x++]=c,p[x++]=c;e={};e[l.POSITION]=u;e[l.NORMAL]=p;u={};u[l.POSITION]={size:3,data:m};u.zOffset={size:1,data:q};u[l.NORMAL]={size:3,data:r};return new A([{type:"triangle",indices:e,positionKey:l.POSITION}],u)},createPolylineGeometry:function(c,b){I.assert(1<c.length,"createPolylineGeometry(): polyline needs at least 2 points");I.assert(3===c[0].length,
"createPolylineGeometry(): malformed vertex");for(var a=new Float32Array(3*c.length),e=new Uint32Array(2*(c.length-1)),d=0,f=0,k=0;k<c.length;k++){for(var h=0;3>h;h++)a[d++]=c[k][h];0<k&&(e[f++]=k-1,e[f++]=k)}f={};d={};f[l.POSITION]=e;d[l.POSITION]={size:3,data:a};a=[{type:"line",indices:f,positionKey:l.POSITION}];return b?{faces:a[0],vertexAttr:d,id:A.getNewId().toString()}:new A(a,d)},addVertexColors:function(c,b,a){var e,d,f;if(a){var k={};a=c.getVertexAttr();for(f in a)k[f]=a[f];c=c.getFaces();
a=Array(c.length);for(d=0;d<c.length;d++){e={};for(f in c[d].indices)e[f]=c[d].indices[f];a[d]={type:c[d].type,indices:e,positionKey:c[d].positionKey}}c=new A(a,k)}b=b||[1,1,1,1];f=new Uint8Array(4);f[0]=255*b[0];f[1]=255*b[1];f[2]=255*b[2];f[3]=255*(3<b.length?b[3]:1);c.getVertexAttr()[l.COLOR]={size:4,data:f};a=c.getFaces();for(d=0;d<a.length;d++)b=a[d],e=new Uint32Array(b.indices[b.positionKey].length),b.indices[l.COLOR]=e;return c},addNormals:function(b){var g=b.getVertexAttr();b=b.getFaces();
for(var a=T.Vec3Compact.subtract,e=b.map(function(a){return a.indices.position.length/3}).reduce(function(a,b){return a+b}),e=new Float32Array(3*e),d=g.position.data,f=0,k=0;k<b.length;k++){for(var h=b[k].indices.position,l=new Uint32Array(h.length),m=0;m<h.length;m+=3){a(d,3*h[m],d,3*h[m+2],V,0);a(d,3*h[m],d,3*h[m+1],G,0);M.cross(G,V);M.normalize(G);var q=f/3;e[f++]=G[0];e[f++]=G[1];e[f++]=G[2];l[m]=q;l[m+1]=q;l[m+2]=q}b[k].indices.normal=l}g.normal={size:3,data:e}},cgToGIS:function(b){var g=b.getVertexAttr();
b=g.position.data;var g=g.normal.data,a,e;if(g)for(a=0;a<g.length;a+=3)e=g[a+1],g[a+1]=-g[a+2],g[a+2]=e;if(b)for(a=0;a<b.length;a+=3)e=b[a+1],b[a+1]=-b[a+2],b[a+2]=e}};return S});