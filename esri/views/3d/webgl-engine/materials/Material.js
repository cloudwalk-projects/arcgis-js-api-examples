// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/Material.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vsPhongSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n#ifdef INSTANCED\r\n    attribute mat4 model;\r\n    attribute mat4 modelNormal;\r\n#else\r\n\tuniform mat4 model;\r\n\tuniform mat4 modelNormal;\r\n#endif\r\n#ifdef INSTANCEDCOLOR\r\n    attribute vec4 instanceColor;\r\n#endif\r\n\tattribute vec3 $position;\r\n\tattribute vec3 $normal;\r\n\tvarying vec3 vpos;\r\n\tvarying vec3 vnormal;\r\n\r\n#ifdef VERTEXCOLORS\r\n    attribute vec4 $color;\r\n#endif\r\n\r\n#if defined(VV_SIZE) || defined(VV_COLOR)\r\n\tattribute vec4 instanceFeatureAttribute;\r\n#endif\r\n\r\n$vvUniforms\r\n\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR) || defined(VV_COLOR)\r\n    varying vec4 vcolor;\r\n#endif\r\n\r\n\t$vvFunctions\r\n\r\n\tvoid main(void) {\r\n#ifdef VV_CUSTOM_MODEL_MATRIX\r\n\t\tvpos \x3d (model * vvTransformPosition($position, instanceFeatureAttribute)).xyz;\r\n\t\tvnormal \x3d normalize((modelNormal * vvTransformNormal($normal, instanceFeatureAttribute)).xyz);\r\n#else\r\n\t\tvpos \x3d (model * vec4($position, 1.0)).xyz;\r\n\t\tvnormal \x3d normalize((modelNormal * vec4($normal, 1.0)).xyz);\r\n#endif\r\n\t\tgl_Position \x3d proj * view * vec4(vpos, 1.0);\r\n\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR) || defined(VV_COLOR)\r\n        vcolor \x3d vec4(1,1,1,1);\r\n#endif\r\n#ifdef VERTEXCOLORS\r\n        vcolor *\x3d $color * 0.003921568627451; // \x3d 1/255\r\n#endif\r\n#ifdef INSTANCEDCOLOR\r\n        vcolor *\x3d instanceColor;\r\n#endif\r\n#ifdef VV_COLOR\r\n        vcolor *\x3d vvGetColor(instanceFeatureAttribute, vvColorValues, vvColorColors);\r\n#endif\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongSrc"\x3e\x3c![CDATA[\r\n\tuniform vec3 camPos;\r\n\tuniform vec4 lightAmbient;\r\n\tuniform vec4 lightDiffuse;\r\n\tuniform vec4 lightSpecular;\r\n\tuniform vec3 lightDirection;\r\n\tuniform vec3 ambient;\r\n\tuniform vec3 diffuse;\r\n\tuniform vec3 specular;\r\n\tuniform float shininess;\r\n\tuniform float opacity;\r\n\tuniform sampler2D depthTex;\r\n\tuniform int shadowMapNum;\r\n\tuniform vec4 shadowMapDistance;\r\n\tuniform mat4 shadowMapMatrix[4];\r\n\tuniform float depthHalfPixelSz;\r\n\tuniform sampler2D ssaoTex;\r\n\tuniform vec4 viewportPixelSz;\r\n\tvarying vec3 vpos;\r\n\tvarying vec3 vnormal;\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR) || defined(VV_COLOR)\r\n    varying vec4 vcolor;\r\n#endif\r\n\r\n#ifdef RECEIVE_SHADOWS\r\n\t$evalShadow\r\n#endif\r\n\r\n\tvoid main() {\r\n\t\tvec3 a \x3d ambient * lightAmbient.rgb * lightAmbient.w;\r\n\r\n\t\tvec3 viewDir \x3d normalize(vpos - camPos);\r\n\r\n#ifndef DOUBLESIDED\r\n\t\tvec3 normal \x3d vnormal;\r\n#else\r\n\t\tvec3 normal \x3d dot(vnormal, viewDir)\x3e0.0?-vnormal:vnormal;\r\n#endif\r\n\r\n    \tnormal \x3d normalize(normal);\r\n\t\tfloat shadow \x3d 0.0;\r\n#ifdef RECEIVE_SHADOWS\r\n\t\tshadow \x3d evalShadow(vpos, 1.0 / gl_FragCoord.w, depthTex, shadowMapNum, shadowMapDistance, shadowMapMatrix, depthHalfPixelSz);\r\n#endif\r\n\t\tvec3 d \x3d (1.0 - shadow) * diffuse * lightDiffuse.rgb * lightDiffuse.w * clamp(dot(normal, lightDirection), .0, 1.0);\r\n\r\n\t\tfloat opacity_ \x3d opacity;\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR) || defined(VV_COLOR)\r\n        a *\x3d vcolor.rgb;\r\n        d *\x3d vcolor.rgb;\r\n        opacity_ *\x3d vcolor.a;\r\n#endif\r\n\r\n\t\tvec3 reflDir \x3d normalize(reflect(viewDir, normal));\r\n\t\tfloat specDot \x3d max(dot(reflDir, lightDirection), .001);\r\n\t\tvec3 s \x3d (1.0 - shadow) * specular * lightSpecular.rgb * lightSpecular.w * pow(specDot, shininess);\r\n\r\n#ifdef RECEIVE_SSAO\r\n\t\tfloat ssao \x3d texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\r\n\t\tssao \x3d viewportPixelSz.z \x3c 0.0 ? 1.0 : ssao;\r\n#else\r\n\t\tfloat ssao \x3d 1.0;\r\n#endif\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsPhong"\x3e\x3c![CDATA[\r\n\t$vsPhongSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhong"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\t$fsPhongSrc\r\n\t\tgl_FragColor \x3d vec4(ssao * (a + d) + s, opacity_);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsPhongTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsPhongSrc\r\n#ifndef FLIPV\r\n\t\tvtc \x3d $uv0;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tvarying vec2 vtc;\r\n\t$fsPhongSrc\r\n\t\tvec4 texColor \x3d texture2D(tex, vtc);\r\n\t\tif (texColor.a \x3c .33) discard;\r\n\t\tgl_FragColor \x3d vec4(ssao * texColor.rgb * (a + d) + s, texColor.a * opacity_);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsPhongAtlasTextured"\x3e\x3c![CDATA[\r\n\tattribute vec4 $uv0;\r\n\tattribute vec4 $region;\r\n\tvarying vec2 vtc;\r\n\tvarying vec4 regionV;\r\n\t$vsPhongSrc\r\n#ifndef FLIPV\r\n        vtc \x3d $uv0.xy;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t    regionV \x3d $region/65535.0;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongAtlasTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tuniform vec2 texSize;\r\n\tvarying vec2 vtc;\r\n\tvarying vec4 regionV;\r\n\r\n\t float calcMipMapLevel(const vec2 ddx, const vec2 ddy) {\r\n\t\t// from:\r\n\t\t//   - OpenGLES Common Profile Specification Version 2.0.25, Section 3.7.7 - Texture Minification\r\n\t\t//   - https://www.opengl.org/discussion_boards/showthread.php/171485-Texture-LOD-calculation-(useful-for-atlasing)\r\n\t\t//   - http://www.linedef.com/virtual-texture-demo.html\r\n\t\tfloat deltaMaxSqr \x3d max(dot(ddx, ddx), dot(ddy, ddy));\r\n\t\treturn max(0.5 * log2(deltaMaxSqr), 0.0);\r\n\t}\r\n\r\n\t$fsPhongSrc\r\n\t\tvec2 uv \x3d vtc;\r\n\t\tuv \x3d fract(uv);\r\n\t\t//[umin, vmin, umax, vmax]\r\n\r\n\t\tvec2 atlasScale \x3d regionV.zw - regionV.xy;\r\n\t\tuv \x3d uv.xy * atlasScale + regionV.xy;\r\n\r\n\t\tvec4 texColor;\r\n\t\t#ifdef GL_OES_standard_derivatives\r\n\t\t\t#extension GL_OES_standard_derivatives : enable\r\n\r\n\t\t\t// calculate derivative of continuous texture coordinate\r\n\t\t\t// to avoid mipmapping artifacts caused by manual wrapping in shader\r\n\t\t\tvec2 dUVdx \x3d dFdx(vtc) * atlasScale;\r\n\t\t\tvec2 dUVdy \x3d dFdy(vtc) * atlasScale;\r\n\r\n\t\t\t#ifdef GL_EXT_shader_texture_lod\r\n\t\t\t\t#extension GL_EXT_shader_texture_lod : enable\r\n\r\n\t\t\t\t// workaround for artifacts in Windows 10 using Intel HD Graphics 4000 series\r\n\t\t\t\t// see: https://devtopia.esri.com/Zurich-R-D-Center/arcgis-js-api-canvas3d-issues/issues/768\r\n\t\t\t\tconst float epsilon \x3d 1.0E-32;\r\n\t\t\t\tfloat zeroUVShift \x3d uv.x \x3d\x3d 0.0 \x26\x26 uv.y \x3d\x3d 0.0 ? epsilon : 0.0;\r\n\r\n\t\t\t\ttexColor \x3d texture2DGradEXT(tex, uv + zeroUVShift, dUVdx, dUVdy);\r\n\t\t\t#else\r\n\t\t\t\t// use bias to compensate for difference in automatic vs desired mipmap level\r\n\t\t\t\tvec2 dUVdxAuto \x3d dFdx(uv);\r\n\t\t\t\tvec2 dUVdyAuto \x3d dFdy(uv);\r\n\t\t\t\tfloat mipMapLevel \x3d calcMipMapLevel(dUVdx * texSize, dUVdy * texSize);\r\n\t\t\t\tfloat autoMipMapLevel \x3d calcMipMapLevel(dUVdxAuto * texSize, dUVdyAuto * texSize);\r\n\t\t\t\ttexColor \x3d texture2D(tex, uv, mipMapLevel - autoMipMapLevel);\r\n\t\t\t#endif\r\n\t\t#else\r\n\t\t\ttexColor \x3d texture2D(tex, uv);\r\n\t\t#endif\r\n\r\n\t\tif (texColor.a \x3c .33) discard;\r\n\t\tgl_FragColor \x3d vec4(ssao * texColor.rgb * (a + d) + s, texColor.a * opacity_);\r\n\t\t//gl_FragColor \x3d regionV;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongTexturedRefl"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tuniform sampler2D reflTex;\r\n\tuniform float reflectivity;\r\n\tvarying vec2 vtc;\r\n\r\n\t$normal2envTC\r\n\r\n\t$fsPhongSrc\r\n\t\tvec4 texColor \x3d texture2D(tex, vtc);\r\n\t\tif (texColor.a \x3c .33) discard;\r\n\t\tvec4 reflColor \x3d texture2D(reflTex, normal2envTC(reflDir));\r\n\t\tgl_FragColor \x3d vec4(ssao * mix(texColor.rgb * (a + d), reflColor.rgb * lightAmbient.rgb*lightSpecular.w, reflectivity) + s, texColor.a * opacity_);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsDepthSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n#ifdef INSTANCED\r\n\tattribute mat4 model;\r\n#else\r\n\tuniform mat4 model;\r\n#endif\r\n\tuniform vec2 nearFar;\r\n\tattribute vec3 $position;\r\n\tvarying float depth;\r\n\r\n\t$vvUniforms\r\n#if defined(VV_CUSTOM_MODEL_MATRIX)\r\n\tattribute vec4 instanceFeatureAttribute;\r\n#endif\r\n\t$vvFunctions\r\n\r\n\tvoid main(void) {\r\n#ifdef VV_CUSTOM_MODEL_MATRIX\r\n\t\tvec4 eye \x3d view * model * vvTransformPosition($position, instanceFeatureAttribute);\r\n#else\r\n\t\tvec4 eye \x3d view * model * vec4($position, 1.0);\r\n#endif\r\n\t\tgl_Position \x3d proj * eye;\r\n\t\tdepth \x3d (-eye.z - nearFar[0]) / (nearFar[1] - nearFar[0]) ;\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsDepth"\x3e\x3c![CDATA[\r\n\t$vsDepthSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsDepthTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsDepthSrc\r\n#ifndef FLIPV\r\n        vtc \x3d $uv0;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsNormalSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n#ifdef INSTANCED\r\n\tattribute mat4 model;\r\n\tattribute mat4 modelNormal;\r\n#else\r\n\tuniform mat4 model;\r\n\tuniform mat4 modelNormal;\r\n#endif\r\n\tuniform mat4 viewNormal;\r\n\tattribute vec3 $position;\r\n\tattribute vec3 $normal;\r\n\tvarying vec3 vnormal;\r\n\r\n\t$vvUniforms\r\n#if defined(VV_CUSTOM_MODEL_MATRIX)\r\n\tattribute vec4 instanceFeatureAttribute;\r\n#endif\r\n\t$vvFunctions\r\n\r\n\tvoid main(void) {\r\n#ifdef VV_CUSTOM_MODEL_MATRIX\r\n\t\tgl_Position \x3d proj * view * model * vvTransformPosition($position, instanceFeatureAttribute);\r\n\t\tvnormal \x3d normalize((viewNormal * modelNormal * vvTransformNormal($normal, instanceFeatureAttribute)).xyz);\r\n#else\r\n\t\tgl_Position \x3d proj * view * model * vec4($position, 1.0);\r\n\t\tvnormal \x3d normalize((viewNormal * modelNormal * vec4($normal, 1.0)).xyz);\r\n#endif\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsNormal"\x3e\x3c![CDATA[\r\n\t$vsNormalSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsNormalTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsNormalSrc\r\n#ifndef FLIPV\r\n\t\tvtc \x3d $uv0;\r\n#else\r\n\t\tvtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsHighlightSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n#ifdef INSTANCED\r\n\tattribute mat4 model;\r\n#else\r\n\tuniform mat4 model;\r\n#endif\r\n\tattribute vec3 $position;\r\n\r\n\t$vvUniforms\r\n#if defined(VV_CUSTOM_MODEL_MATRIX)\r\n\tattribute vec4 instanceFeatureAttribute;\r\n#endif\r\n\t$vvFunctions\r\n\r\n\tvoid main(void) {\r\n#ifdef VV_CUSTOM_MODEL_MATRIX\r\n\t\tgl_Position \x3d proj * view * model * vvTransformPosition($position, instanceFeatureAttribute);\r\n#else\r\n\t\tgl_Position \x3d proj * view * model * vec4($position, 1.0);\r\n#endif\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsHighlight"\x3e\x3c![CDATA[\r\n\t$vsHighlightSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsHighlightTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsHighlightSrc\r\n#ifndef FLIPV\r\n\t\tvtc \x3d $uv0;\r\n#else\r\n\t\tvtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsDepthSrc"\x3e\x3c![CDATA[\r\n\tvarying float depth;\r\n\r\n\tvoid main() {\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsDepth"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\t$calcFragDepth\r\n\t$float2rgba\r\n\t$fsDepthSrc\r\n#ifndef BIAS_SHADOWMAP\r\n\t\tgl_FragColor \x3d float2rgba(depth);\r\n#else\r\n\t\tgl_FragColor \x3d float2rgba(calcFragDepth(depth));\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsDepthTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tvarying vec2 vtc;\r\n\t$calcFragDepth\r\n\t$float2rgba\r\n\r\n\t$fsDepthSrc\r\n\t\tif (texture2D(tex, vtc).a \x3c .33) discard;\r\n#ifndef BIAS_SHADOWMAP\r\n\t\tgl_FragColor \x3d float2rgba(depth);\r\n#else\r\n\t\tgl_FragColor \x3d float2rgba(calcFragDepth(depth));\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsNormal"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tvarying vec3 vnormal;\r\n\tvoid main() {\r\n\t\tvec3 normal \x3d normalize(vnormal);\r\n\t\tif (gl_FrontFacing \x3d\x3d false) normal \x3d -normal;\r\n\r\n#ifndef ALPHA_ZERO\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 1.0);\r\n#else\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 0.0);\r\n#endif\r\n\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsNormalTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tvarying vec3 vnormal;\r\n\tvarying vec2 vtc;\r\n\tuniform sampler2D tex;\r\n\tvoid main() {\r\n\t\tif (texture2D(tex, vtc).a \x3c .33) discard;\r\n\t\tvec3 normal \x3d normalize(vnormal);\r\n\t\tif (gl_FrontFacing \x3d\x3d false) normal \x3d -normal;\r\n#ifndef ALPHA_ZERO\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 1.0);\r\n#else\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 0.0);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsHighlight"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tvoid main() {\r\n\t\tgl_FragColor \x3d vec4(1.0, 1.0, 1.0, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsHighlightTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\tvarying vec2 vtc;\r\n\tuniform sampler2D tex;\r\n\tvoid main() {\r\n\t\tif (texture2D(tex, vtc).a \x3c .33) discard;\r\n    gl_FragColor \x3d vec4(1.0, 1.0, 1.0, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n'}});
define("dojo/_base/lang dojo/text!./Material.xml ./internal/MaterialUtil ../../../webgl/Program ../lib/ShaderVariations ../lib/Util ../lib/gl-matrix ../lib/RenderSlot ../lib/DefaultVertexAttributeLocations ../lib/DefaultVertexBufferLayouts ../../../webgl/Util".split(" "),function(u,G,h,k,v,s,H,w,m,I,n){function x(a,d){var e=d.vvSizeEnabled;d.vvSizeEnabled?(a.setUniform3fv("vvSizeMinDataValue",d.vvSizeMinDataValue),a.setUniform3fv("vvSizeMaxDataValue",d.vvSizeMaxDataValue),a.setUniform3fv("vvSizeMinSize",
d.vvSizeMinSize),a.setUniform3fv("vvSizeMaxSize",d.vvSizeMaxSize)):e&&a.setUniform3fv("vvSizeValue",d.vvSizeValue);e&&(a.setUniform3fv("vvAnchorValue",d.vvAnchorValue),a.setUniformMatrix4fv("vvRotationValue",d.vvRotationValue));d.vvColorEnabled&&(a.setUniform1fv("vvColorValues",d.vvColorValues),a.setUniform4fv("vvColorColors",d.vvColorColors))}function y(a,d){a.vvSizeEnabled=d.vvSizeEnabled;a.vvSizeMinDataValue=d.vvSizeMinDataValue;a.vvSizeMinSize=d.vvSizeMinSize;a.vvSizeMaxDataValue=d.vvSizeMaxDataValue;
a.vvSizeMaxSize=d.vvSizeMaxSize;a.vvSizeValue=d.vvSizeValue;a.vvRotationValue=d.vvRotationValue;a.vvAnchorValue=d.vvAnchorValue}var E=s.assert,D=H.vec3,t,z=D.create();s=function(a,d){h.basicMaterialConstructor(this,d);a=a||{};a.ambient=a.ambient||[0.2,0.2,0.2];a.diffuse=a.diffuse||[0.8,0.8,0.8];a.specular=a.specular||[0,0,0];a.shininess=a.shininess||10;a.opacity=void 0!==a.opacity?a.opacity:1;a.blendModeOneOne=a.blendModeOneOne||!1;a.inverseWindingOrder=a.inverseWindingOrder||!1;a.vertexColors=a.vertexColors||
!1;a.flipV=a.flipV||!1;a.doubleSided=a.doubleSided||!1;a.cullFace=a.cullFace||void 0;a.instanced=a.instanced||!1;this.instanced=!!a.instanced;a.writeStencil=a.writeStencil||!1;a.textureId||(a.reflTextureId=void 0);a.receiveSSAO=void 0!==a.receiveSSAO?a.receiveSSAO:!0;a.vvSizeEnabled=a.vvSizeEnabled||!1;a.vvSizeMinDataValue=a.vvSizeMinDataValue||[0,0,0];a.vvSizeMinSize=a.vvSizeMinSize||[1,1,1];a.vvSizeMaxDataValue=a.vvSizeMaxDataValue||[0,0,0];a.vvSizeMaxSize=a.vvSizeMaxSize||[100,100,100];a.vvSizeValue=
a.vvSizeValue||[1,1,1];a.vvAnchorValue=a.vvAnchorValue||[0,0,0];a.vvRotationValue=a.vvRotationValue||[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];a.vvColorEnabled=a.vvColorEnabled||!1;a.vvColorValues=a.vvColorValues||[0,0,0,0,0,0,0,0];a.vvColorColors=a.vvColorColors||[1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0];var e;e=a.textureId?a.atlasRegions?"Pos3NormTexRegion":"Pos3NormTex":"Pos3Norm";a.vertexColors&&(e+="Col");var b=I[e],c=null;a.instanced&&(c=[],n.addDescriptor(c,"model",16,5126,
!1,1),n.addDescriptor(c,"modelNormal",16,5126,!1,1),-1<a.instanced.indexOf("color")&&n.addDescriptor(c,"instanceColor",4,5126,!1,1),-1<a.instanced.indexOf("featureAttribute")&&n.addDescriptor(c,"instanceFeatureAttribute",4,5126,!1,1));var f=this.isVisible.bind(this);this.isVisible=function(){return f()&&0<a.opacity};this.dispose=function(){};this.getParams=function(){return a};this.getParameterValues=function(){var b={ambient:a.ambient,diffuse:a.diffuse,specular:a.specular,shininess:a.shininess,opacity:a.opacity,
transparent:a.transparent,polygonOffset:a.polygonOffset,reflectivity:a.reflectivity,atlasRegions:a.atlasRegions,flipV:a.flipV,doubleSided:a.doubleSided,cullFace:a.cullFace,writeStencil:a.writeStencil,receiveSSAO:a.receiveSSAO,vvSizeEnabled:a.vvSizeEnabled,vvSizeMinDataValue:a.vvSizeMinDataValue,vvSizeMinSize:a.vvSizeMinSize,vvSizeMaxDataValue:a.vvSizeMaxDataValue,vvSizeMaxSize:a.vvSizeMaxSize,vvSizeValue:a.vvSizeValue,vvRotationValue:a.vvRotationValue,vvAnchorValue:a.vvAnchorValue,vvColorEnabled:a.vvColorEnabled,
vvColorValues:a.vvColorValues,vvColorColors:a.vvColorColors};a.textureId&&(b.textureId=a.textureId,b.initTexture=a.initTexture);return b};this.setParameterValues=function(b){for(var c in b)"textureId"===c&&E(a.textureId,"Can only change texture of material that already has a texture"),a[c]=b[c];this.notifyDirty("matChanged")};this.getOutputAmount=function(a){var c=n.getStride(b)/4;return a*c};this.getVertexBufferLayout=function(){return b};this.getInstanceBufferLayout=function(){return c};this.fillInterleaved=
function(a,c,d,e,g,f,k){h.fillInterleaved(a,c,d,e,b,g,f,k)};this.intersect=h.intersectTriangleGeometry;this.getGLMaterials=function(){return{color:J,depthShadowMap:K,normal:L,depth:F,highlight:M}};this.getAllTextureIds=function(){var b=[];a.textureId&&b.push(a.textureId);a.reflTextureId&&b.push(a.reflTextureId);return b}};s.paramsFromOldConstructor=function(a,d,e,b,c,f,h,r,p,q,g,k,m){return{textureId:a,transparent:d,ambient:e,diffuse:b,specular:c,shininess:f,opacity:h,polygonOffset:r,initTexture:p,
reflTextureId:q,reflectivity:g,flipV:k,doubleSided:m,cullFace:void 0}};var A=function(a,d){var e=a.gl;(d.cullFace?"none"!==d.cullFace:!d.transparent)?(a.setFaceCullingEnabled(!0),"front"===d.cullFace&&a.setCullFace(e.FRONT)):a.setFaceCullingEnabled(!1)},B=function(a,d){var e=a.gl;(d.cullFace?"none"!==d.cullFace:!d.transparent)?(a.setFaceCullingEnabled(!1),"front"===d.cullFace&&a.setCullFace(e.BACK)):a.setFaceCullingEnabled(!0)},C=function(a,d){return a?w.TRANSPARENT_MATERIAL:d?w.STENCIL_MATERIAL:
w.OPAQUE_MATERIAL},J=function(a,d,e){h.basicGLMaterialConstructor(this,a);var b=u.clone(a.getParams()),c=C(b.transparent,b.writeStencil);h.singleTextureGLMaterialConstructor(this,e,b);var f=h.aquireIfNotUndefined(b.reflTextureId,b.reflInitTexture,e);f&&(f=f.getGLTexture());E(!(b.atlasRegions&&b.reflTextureId),"Atlas texture with reflection is not yet supported");var l=!b.textureId?"none":b.atlasRegions?"AtlasTextured":"Textured";this.instanced=t&&b.instanced;var r=!!this.instanced&&-1<this.instanced.indexOf("color");
this._loadProgram=function(a,c){return d.shaderVariators.Material.getProgram([l,!!b.reflTextureId,b.vertexColors,b.flipV,b.doubleSided,!!this.instanced,r,a,c,!!b.vvSizeEnabled,!!b.vvColorEnabled])};var p=this._loadProgram(!1,b.receiveSSAO),q=this._loadProgram(!0,b.receiveSSAO),g=null,k="AtlasTextured"===l,m=this.dispose;this.dispose=function(){m();h.releaseIfNotUndefined(b.reflTextureId,e)};this.beginSlot=function(a){return c===a};this.getProgram=function(){return g||p};this.getAllPrograms=function(){return[q,
p]};this.updateParameters=function(){var d=a.getParams();b.ambient=d.ambient;b.diffuse=d.diffuse;b.specular=d.specular;b.shininess=d.shininess;b.opacity=d.opacity;b.polygonOffset=d.polygonOffset;b.reflectivity=d.reflectivity;b.flipV=d.flipV;b.doubleSided=d.doubleSided;b.cullFace=d.cullFace;b.receiveSSAO=d.receiveSSAO;y(b,d);b.vvColorEnabled=d.vvColorEnabled;b.vvColorValues=d.vvColorValues;b.vvColorColors=d.vvColorColors;b.transparent!=d.transparent&&(c=C(d.transparent),b.transparent=d.transparent);
b.initTexture=d.initTexture;this.updateTexture(d.textureId);d.atlasRegions&&(b.atlasRegions=d.atlasRegions);b.blendModeOneOne=d.blendModeOneOne;b.inverseWindingOrder=d.inverseWindingOrder;p=this._loadProgram(!1,b.receiveSSAO);q=this._loadProgram(!0,b.receiveSSAO)};this.bind=function(a,c){var d=a.gl;g=c.shadowMap&&c.shadowMap.getEnableState()?q:p;a.bindProgram(g);g.setUniform3fv("ambient",b.ambient);g.setUniform3fv("diffuse",b.diffuse);g.setUniform3fv("specular",b.specular);g.setUniform1f("shininess",
b.shininess);g.setUniform1f("opacity",b.opacity);c.shadowMap||g.setUniform1f("depthHalfPixelSz",-1);x(g,b);this.bindTexture(a,g);k&&this.bindTextureSize(a,g);a.setBlendFunctionSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA);void 0!==f&&(g.setUniform1i("reflTex",1),a.bindTexture(f,1),g.setUniform1f("reflectivity",b.reflectivity));b.inverseWindingOrder&&a.setFrontFace(d.CW);b.transparent?(a.setBlendingEnabled(!0),b.blendModeOneOne?(a.setBlendFunction(d.ONE,d.ONE),a.setDepthWriteEnabled(!1)):
a.setBlendFunctionSeparate(d.SRC_ALPHA,d.ONE_MINUS_SRC_ALPHA,d.ONE,d.ONE_MINUS_SRC_ALPHA)):a.setBlendingEnabled(!1);b.polygonOffset&&(a.setPolygonOffsetFillEnabled(!0),a.setPolygonOffset(2,2));A(a,b);a.setDepthTestEnabled(!0)};this.release=function(a,d){var c=a.gl;a.setPolygonOffsetFillEnabled(!1);B(a,b);a.setBlendingEnabled(!1);a.setBlendFunctionSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);a.setDepthWriteEnabled(!0);a.setFrontFace(c.CCW)};this.bindView=function(a,b){g=
b.shadowMap&&b.shadowMap.getEnableState()?q:p;var c=b.origin;h.bindView(c,b.view,g);h.bindCamPos(c,b.viewInvTransp,g);b.shadowMap&&b.shadowMap.bindView(g,c)};this.bindInstance=function(a,c){g.setUniformMatrix4fv("model",c.transformation);g.setUniformMatrix4fv("modelNormal",c.transformationNormal);if(r&&c.instanceParameters){var d=c.instanceParameters.color;d&&(D.multiply(b.ambient,d,z),g.setUniform3fv("ambient",z),D.multiply(b.diffuse,d,z),g.setUniform3fv("diffuse",z),g.setUniform1f("opacity",b.opacity*
d[3]))}};this.getDrawMode=function(a){return a.gl.TRIANGLES}},F=function(a,d,e,b){h.basicGLMaterialConstructor(this,a);var c=u.clone(a.getParams());this.instanced=t&&c.instanced;var f=!n.hasAttribute(a.getVertexBufferLayout(),"uv0")?"none":"Textured",l=d.shaderVariators.MaterialDepth.getProgram([f,c.flipV,!!this.instanced,!!b,!!c.vvSizeEnabled]),r=C(c.transparent,c.writeStencil);h.singleTextureGLMaterialConstructor(this,e,c);this.beginSlot=function(a){return r===a};this.getProgram=function(){return l};
this.updateParameters=function(){var b=a.getParams();c.initTexture=b.initTexture;c.cullFace=b.cullFace;c.inverseWindingOrder=b.inverseWindingOrder;c.flipV=b.flipV;y(c,b);this.updateTexture(b.textureId)};this.bind=function(a,b){var d=a.gl;a.bindProgram(l);l.setUniform2fv("nearFar",b.nearFar);c.inverseWindingOrder&&a.setFrontFace(d.CW);x(l,c);this.bindTexture(a,l);A(a,c);a.setDepthTestEnabled(!0)};this.release=function(a){var b=a.gl;B(a,c);c.inverseWindingOrder&&a.setFrontFace(b.CCW)};this.bindView=
function(a,b){h.bindView(b.origin,b.view,l)};this.bindInstance=function(a,b){l.setUniformMatrix4fv("model",b.transformation)};this.getDrawMode=function(a){return a.gl.TRIANGLES}},K=function(a,d,e){F.call(this,a,d,e,!0)},L=function(a,d,e){h.basicGLMaterialConstructor(this,a);var b=u.clone(a.getParams()),c=!n.hasAttribute(a.getVertexBufferLayout(),"uv0")?"none":"Textured";this.instanced=t&&b.instanced;var f=d.shaderVariators.MaterialNormal.getProgram([c,b.flipV,!!this.instanced,!!b.vvSizeEnabled]),
l=C(b.transparent,b.writeStencil);h.singleTextureGLMaterialConstructor(this,e,b);this.beginSlot=function(a){return l===a};this.getProgram=function(){return f};this.updateParameters=function(){var c=a.getParams();b.initTexture=c.initTexture;b.cullFace=c.cullFace;b.inverseWindingOrder=c.inverseWindingOrder;b.flipV=c.flipV;y(b,c);this.updateTexture(c.textureId)};this.bind=function(a,c){var d=a.gl;a.bindProgram(f);this.bindTexture(a,f);f.setUniformMatrix4fv("viewNormal",c.viewInvTransp);x(f,b);A(a,b);
b.inverseWindingOrder&&a.setFrontFace(d.CW);a.setDepthTestEnabled(!0)};this.release=function(a){var c=a.gl;B(a,b);b.inverseWindingOrder&&a.setFrontFace(c.CCW)};this.bindView=function(a,b){h.bindView(b.origin,b.view,f)};this.bindInstance=function(a,b){f.setUniformMatrix4fv("model",b.transformation);f.setUniformMatrix4fv("modelNormal",b.transformationNormal)};this.getDrawMode=function(a){return a.gl.TRIANGLES}},M=function(a,d,e,b){h.basicGLMaterialConstructor(this,a);var c=u.clone(a.getParams());b=
!n.hasAttribute(a.getVertexBufferLayout(),"uv0")?"none":"Textured";this.instanced=t&&c.instanced;var f=d.shaderVariators.MaterialHighlight.getProgram([b,c.flipV,!!this.instanced,!!c.vvSizeEnabled]),l=w.OPAQUE_MATERIAL;h.singleTextureGLMaterialConstructor(this,e,c);this.beginSlot=function(a){return l===a};this.getProgram=function(){return f};this.updateParameters=function(){var b=a.getParams();c.initTexture=b.initTexture;c.cullFace=b.cullFace;c.inverseWindingOrder=b.inverseWindingOrder;c.flipV=b.flipV;
y(c,b);this.updateTexture(b.textureId)};this.bind=function(a,b){var d=a.gl;a.bindProgram(f);this.bindTexture(a,f);x(f,c);A(a,c);c.inverseWindingOrder&&a.setFrontFace(d.CW);a.setDepthTestEnabled(!0)};this.release=function(a){var b=a.gl;B(a,c);c.inverseWindingOrder&&a.setFrontFace(b.CW)};this.bindView=function(a,b){h.bindView(b.origin,b.view,f)};this.bindInstance=function(a,b){f.setUniformMatrix4fv("model",b.transformation);f.setUniformMatrix4fv("modelNormal",b.transformationNormal)};this.getDrawMode=
function(a){return a.gl.TRIANGLES}};s.loadShaders=function(a,d,e,b){a._parse(G);t=b.extensions.angleInstancedArrays;b.extensions.shaderTextureLOD;b.extensions.standardDerivatives;var c=new v("phong",["vsPhong","fsPhong"],null,e,d,a,b);c.addNaryShaderSnippetSuffix([{value:"none",programNameSuffix:"",shaderSnippetSuffix:""},{value:"Textured"},{value:"AtlasTextured"}]);c.addBinaryShaderSnippetSuffix("Refl","Refl",[!1,!0]);c.addDefine("Color","VERTEXCOLORS");c.addDefine("FlipV","FLIPV");c.addDefine("DoubleSided",
"DOUBLESIDED");c.addDefine("Instanced","INSTANCED");c.addDefine("InstColor","INSTANCEDCOLOR");c.addDefine("ReceiveShadows","RECEIVE_SHADOWS");c.addDefine("ReceiveSSAO","RECEIVE_SSAO");c.addDefine("vvSize","VV_SIZE");c.addDefine("vvColor","VV_COLOR");e.shaderVariators.Material=c;c=new v("depth",["vsDepth","fsDepth"],null,e,d,a,b);c.addNaryShaderSnippetSuffix([{value:"none",programNameSuffix:"",shaderSnippetSuffix:""},{value:"Textured"},{value:"AtlasTextured"}]);c.addDefine("FlipV","FLIPV");c.addDefine("Instanced",
"INSTANCED");c.addDefine("ShadowMap","BIAS_SHADOWMAP");c.addDefine("vvSize","VV_SIZE");e.shaderVariators.MaterialDepth=c;c=new v("normal",["vsNormal","fsNormal"],null,e,d,a,b);c.addNaryShaderSnippetSuffix([{value:"none",programNameSuffix:"",shaderSnippetSuffix:""},{value:"Textured"},{value:"AtlasTextured"}]);c.addDefine("FlipV","FLIPV");c.addDefine("Instanced","INSTANCED");c.addDefine("vvSize","VV_SIZE");e.shaderVariators.MaterialNormal=c;c=new v("highlight",["vsNormal","fsNormal"],null,e,d,a,b);
c.addNaryShaderSnippetSuffix([{value:"none",programNameSuffix:"",shaderSnippetSuffix:""},{value:"Textured"},{value:"AtlasTextured"}]);c.addDefine("FlipV","FLIPV");c.addDefine("Instanced","INSTANCED");c.addDefine("vvSize","VV_SIZE");e.shaderVariators.MaterialHighlight=c;var c=new k(b,a.vsDepth,a.fsDepth,m.Default3D,["BIAS_SHADOWMAP 1"]),f=new k(b,a.vsDepthTextured,a.fsDepthTextured,m.Default3D,["BIAS_SHADOWMAP 1"]),h=new k(b,a.vsDepth,a.fsDepth,m.Default3D),n=new k(b,a.vsDepthTextured,a.fsDepthTextured,
m.Default3D),p=new k(b,a.vsNormal,a.fsNormal,m.Default3D),q=new k(b,a.vsNormalTextured,a.fsNormalTextured,m.Default3D),g=new k(b,a.vsHighlight,a.fsHighlight,m.Default3D);b=new k(b,a.vsHighlightTextured,a.fsHighlightTextured,m.Default3D);e.add("depthShadowMap",c);e.add("depthTexturedShadowMap",f);e.add("depth",h);e.add("depthTextured",n);e.add("normal",p);e.add("normalTextured",q);e.add("highlight",g);e.add("highlightTextured",b);d.add("fsDepth",{source:a.fsDepth});d.add("fsDepthTextured",{source:a.fsDepthTextured});
d.add("fsDepthShadowMap",{source:a.fsDepthShadowMap,defines:["BIAS_SHADOWMAP 1"]});d.add("fsDepthTexturedShadowMap",{source:a.fsDepthTextured,defines:["BIAS_SHADOWMAP 1"]});d.add("vsDepth",{source:a.vsDepth});d.add("fsNormal",{source:a.fsNormal})};return s});