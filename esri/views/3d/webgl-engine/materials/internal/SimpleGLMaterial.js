// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/internal/SimpleGLMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderSimple"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tattribute vec3 $position;\r\n\r\n\tvoid main(void) {\r\n\t\tgl_Position \x3d proj * view * vec4((model * vec4($position, 1.0)).xyz, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fragmentShaderSimple"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform vec4 color;\r\n\r\n\tvoid main() {\r\n\t\tgl_FragColor \x3d color;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\x3c/snippets\x3e'}});
define("require exports dojo/text!./SimpleGLMaterial.xml ./MaterialUtil ../../lib/RenderSlot ../../../../webgl/Program ../../../../webgl/enums ../../lib/DefaultVertexAttributeLocations".split(" "),function(l,m,f,d,g,h,n,k){return function(){function a(b,a,e,c){void 0===c&&(c=4);this.id=d.__GLMaterial_id++;this.program=b.get("simple");this.color=a;this.depthFunc=e;this.drawMode=c}a.prototype.getId=function(){return this.id};a.prototype.beginSlot=function(b){return b===g.INTERNAL_MATERIAL};a.prototype.getProgram=
function(){return this.program};a.prototype.bind=function(b,a){b.bindProgram(this.program);this.program.setUniformMatrix4fv("model",d.IDENTITY);this.program.setUniformMatrix4fv("proj",a.proj);this.program.setUniform4fv("color",this.color);b.setBlendingEnabled(!0);void 0!==this.depthFunc&&b.setDepthFunction(this.depthFunc)};a.prototype.release=function(b){void 0!==this.depthFunc&&b.setDepthFunction(513);b.setBlendingEnabled(!1)};a.prototype.bindView=function(b,a){d.bindView(a.origin,a.view,this.program)};
a.prototype.bindInstance=function(b,a){this.program.setUniformMatrix4fv("model",a.transformation)};a.prototype.getDrawMode=function(a){return this.drawMode};a.loadShaders=function(a,d,e,c){a._parse(f);a=new h(c,a.vertexShaderSimple,a.fragmentShaderSimple,k.Default3D);e.add("simple",a)};return a}()});