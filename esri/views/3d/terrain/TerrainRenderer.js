// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/terrain/TerrainMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrain"\x3e\x3c![CDATA[\r\n  precision mediump float;\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform vec3 origin;\r\n  uniform vec2 texOffset;\r\n  uniform float texScale;\r\n  uniform mat4 viewNormal;\r\n\r\n  attribute vec3 $position;\r\n  attribute vec2 $uv0;\r\n  varying vec2 vtc;\r\n  varying vec3 vpos;\r\n  varying vec3 vnormal;\r\n\r\n#if defined(WIREFRAME) || defined(TILE_BORDERS)\r\n  varying vec2 vuv;\r\n#endif\r\n\r\n#ifdef ATMOSPHERE\r\n  uniform vec3 lightDirection;\r\n  varying vec3 wpos;\r\n  varying vec3 wview;\r\n  varying vec3 wnormal;\r\n  varying vec3 wlight;\r\n#endif\r\n\r\n#ifdef OVERLAY\r\n  uniform vec2 overlayTexOffset;\r\n  uniform vec2 overlayTexScale;\r\n  varying vec2 vtcOverlay;\r\n#endif\r\n\r\n  void main(void) {\r\n    vpos \x3d $position;\r\n\r\n#ifdef SPHERICAL\r\n    vnormal \x3d normalize(vpos + origin);\r\n#else\r\n    vnormal \x3d vec3(0, 0, 1); // WARNING: up-axis dependent code\r\n#endif\r\n\r\n#ifdef ATMOSPHERE\r\n    wpos \x3d (view * vec4(vpos, 1.0)).xyz;\r\n    wnormal \x3d (viewNormal * vec4(normalize(vpos+origin), 1.0)).xyz;\r\n    wlight \x3d (view  * vec4(lightDirection, 1.0)).xyz;\r\n#endif\r\n\r\n#if defined(WIREFRAME) || defined(TILE_BORDERS)\r\n    vuv \x3d $uv0;\r\n#endif\r\n\r\n    gl_Position \x3d proj * view * vec4(vpos, 1.0);\r\n    vtc \x3d $uv0*texScale + texOffset;\r\n\r\n#ifdef OVERLAY\r\n    vtcOverlay \x3d $uv0*overlayTexScale + overlayTexOffset;\r\n#endif\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainCommon"\x3e\x3c![CDATA[\r\n  uniform vec3 lightDirection;\r\n  uniform vec3 viewDirection;\r\n  uniform sampler2D depthTex;\r\n  uniform int shadowMapNum;\r\n  uniform vec4 shadowMapDistance;\r\n  uniform mat4 shadowMapMatrix[4];\r\n  uniform float depthHalfPixelSz;\r\n  uniform sampler2D ssaoTex;\r\n  uniform vec4 viewportPixelSz;\r\n  uniform sampler2D tex;\r\n  uniform float opacity;\r\n\r\n  varying vec3 vpos;\r\n  varying vec3 vnormal;\r\n  varying vec2 vtc;\r\n\r\n#if defined(WIREFRAME) || defined(TILE_BORDERS)\r\n  varying vec2 vuv;\r\n#endif\r\n\r\n#ifdef ATMOSPHERE\r\n  varying vec3 wpos;\r\n  varying vec3 wview;\r\n  varying vec3 wnormal;\r\n  varying vec3 wlight;\r\n#endif\r\n\r\n  const vec3 ambient \x3d vec3(0.2,0.2,0.2);\r\n  const vec3 diffuse \x3d vec3(0.8,0.8,0.8);\r\n  const float diffuseHardness \x3d 2.5;\r\n\r\n#ifdef OVERLAY\r\n  uniform sampler2D overlayTex;\r\n  uniform float overlayOpacity;\r\n  varying vec2 vtcOverlay;\r\n#endif\r\n\r\n#ifdef RECEIVE_SHADOWS\r\n\t$evalShadow\r\n#endif\r\n\r\n  float lum(vec3 c) {\r\n    float max \x3d max(max(c.r, c.g), c.b);\r\n    float min \x3d min(min(c.r, c.g), c.b);\r\n    return (min + max) * 0.5;\r\n  }\r\n\r\n#ifdef ATMOSPHERE\r\n  vec3 atmosphere(vec3 lightPos, vec3 normal, vec3 view) {\r\n    vec3 surfaceColor   \x3d vec3(0.0);\r\n    vec3 fuzzySpecColor \x3d vec3(1.0);\r\n    vec3 subColor       \x3d vec3(0.0);\r\n    float rollOff       \x3d 1.0;\r\n\r\n    vec3 Ln \x3d normalize(lightPos);\r\n    vec3 Nn \x3d normalize(normal);\r\n    vec3 Hn \x3d normalize(view + Ln);\r\n\r\n    float ldn \x3d dot(Ln, Nn);\r\n    float diffComp \x3d max(0.0, ldn);\r\n    float vdn \x3d 1.0 - dot(view, Nn);\r\n    float ndv \x3d dot(view, Ln);\r\n\r\n    vec3 diffContrib \x3d surfaceColor * diffComp;\r\n    float subLamb \x3d max(0.0, smoothstep(-rollOff, 1.0, ldn) - smoothstep(0.0, 1.0, ldn));\r\n\r\n    vec3 subContrib \x3d subLamb * subColor;\r\n    vec3 vecColor \x3d vec3(vdn);\r\n\r\n    vec3 diffuseContrib \x3d (subContrib + diffContrib);\r\n    vec3 specularContrib \x3d (vecColor * fuzzySpecColor);\r\n\r\n    return (diffContrib + specularContrib) * rollOff;\r\n  }\r\n#endif\r\n\r\n  void main() {\r\n    vec3 a \x3d ambient;\r\n\r\n    float shadow \x3d 0.0;\r\n#ifdef RECEIVE_SHADOWS\r\n    shadow \x3d evalShadow(vpos, 1.0 / gl_FragCoord.w, depthTex, shadowMapNum, shadowMapDistance, shadowMapMatrix, depthHalfPixelSz);\r\n#endif\r\n    float vndl \x3d dot(normalize(vnormal), lightDirection);\r\n    float k \x3d smoothstep(0.0, 1.0, clamp(vndl*diffuseHardness, 0.0, 1.0));\r\n    vec3 d \x3d (1.0 - shadow/1.8) * diffuse * k;\r\n\r\n    float ssao \x3d viewportPixelSz.w \x3c .0 ? 1.0 : texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\r\n    vec4 texCol \x3d texture2D(tex, vtc);\r\n\r\n#ifdef OVERLAY\r\n    if ((vtcOverlay.x \x3e 0.0) \x26\x26 (vtcOverlay.y \x3e 0.0) \x26\x26 (vtcOverlay.x \x3c 1.0) \x26\x26 (vtcOverlay.y \x3c 1.0)) {\r\n      vec4 overlayTexCol \x3d texture2D(overlayTex, vtcOverlay);\r\n      overlayTexCol *\x3d overlayOpacity;\r\n      texCol \x3d texCol * (1.0 - overlayTexCol.a) + overlayTexCol; // texCol and overlayTexCol have pre-multiplied alpha\r\n    }\r\n#endif\r\n\r\n    vec3 atm \x3d vec3(0.0);\r\n#ifdef ATMOSPHERE\r\n    float ndotl \x3d max(0.0, min(1.0, vndl));\r\n    atm \x3d atmosphere(wlight, wnormal, -viewDirection);\r\n    atm *\x3d max(0.0, min(1.0, (1.0-lum(texCol.rgb)*1.5))); //avoid atmosphere on bright base maps\r\n    atm *\x3d max(0.0, min(1.0, ndotl*2.0)); // avoid atmosphere on dark side of the globe\r\n#endif\r\n\r\n    vec3 color \x3d atm + texCol.rgb * (a + d) * ssao;\r\n    gl_FragColor \x3d vec4(color, texCol.a) * opacity;\r\n\r\n  // closing } is missing here, it\'s in the shaders using this snippet below\r\n\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainWireframe"\x3e\x3c![CDATA[\r\n#ifdef GL_OES_standard_derivatives\r\n#extension GL_OES_standard_derivatives : enable\r\n#endif\r\n\r\n  precision mediump float;\r\n\r\n  struct WireframeSettings {\r\n    float width;\r\n    float falloff;\r\n    float subdivision;\r\n    vec4 color;\r\n    float wireOpacity;\r\n    float surfaceOpacity;\r\n    float near;\r\n    float far;\r\n  };\r\n\r\n  uniform WireframeSettings wireframe;\r\n\r\n    $fsTerrainCommon\r\n\r\n    vec2 dVuv;\r\n    vec2 vuvScaled \x3d vuv * wireframe.subdivision;\r\n    vec2 vuvMod \x3d fract(vuvScaled);\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n    dVuv \x3d fwidth(vuvScaled);\r\n#else\r\n    // Something that reasonably works\r\n    dVuv \x3d vec2(0.05);\r\n#endif\r\n\r\n    vec2 edgeFactors \x3d smoothstep((wireframe.width - wireframe.falloff) * dVuv,\r\n                                  wireframe.width * dVuv, min(vuvMod, 1.0 - vuvMod));\r\n\r\n    float edgeFactor \x3d 1.0 - min(edgeFactors.x, edgeFactors.y);\r\n\r\n#ifdef WIREFRAME\r\n    gl_FragColor \x3d vec4(mix(gl_FragColor.rgb, wireframe.color.rgb, edgeFactor * wireframe.color.a),\r\n                        mix(wireframe.surfaceOpacity, wireframe.wireOpacity, edgeFactor));\r\n#endif\r\n\r\n\r\n#ifdef TILE_BORDERS\r\n    dVuv \x3d fwidth(vuv);\r\n    edgeFactors \x3d smoothstep((wireframe.width - wireframe.falloff) * dVuv,\r\n                              wireframe.width * dVuv, min(vuv, 1.0 - vuv));\r\n    edgeFactor \x3d 1.0 - min(edgeFactors.x, edgeFactors.y);\r\n\r\n    gl_FragColor \x3d mix(gl_FragColor, vec4(1.0, 0.0, 0.0, 1.0), edgeFactor);\r\n#endif\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrain"\x3e\x3c![CDATA[\r\n  precision mediump float;\r\n\r\n    $fsTerrainCommon\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrainNormal"\x3e\x3c![CDATA[\r\n  uniform vec3 origin;\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform mat4 viewNormal;\r\n  attribute vec3 $position;\r\n  varying vec3 vnormal;\r\n\r\n  void main(void) {\r\n#ifdef SPHERICAL\r\n    vec4 normal \x3d vec4(normalize($position + origin), 1.0);\r\n#else\r\n    vec4 normal \x3d vec4(0.0, 1.0, 0.0, 1.0);\r\n#endif\r\n\r\n    gl_Position \x3d proj * view * vec4($position, 1.0);\r\n    vnormal \x3d normalize((viewNormal * normal).xyz);\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrainDepthOnly"\x3e\x3c![CDATA[\r\n  precision mediump float;\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n\r\n  attribute vec3 $position;\r\n\r\n  void main() {\r\n    gl_Position \x3d proj * view * vec4($position, 1.0);\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainDepthOnly"\x3e\x3c![CDATA[\r\n  precision mediump float;\r\n\r\n  void main() {\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n'}});
define("dojo/Deferred dojo/when ./TileUtils ./TerrainConst ./TileGeometryFactory ./TileRenderData ./ResourceCounter ./TileRenderer ../support/PreallocArray ../../../core/ObjectPool ../webgl-engine/lib/ShaderVariations dojo/text!./TerrainMaterial.xml ../webgl-engine/materials/internal/MaterialUtil ../webgl-engine/lib/Util ../lib/glMatrix ../webgl-engine/lib/RenderPass ../webgl-engine/lib/RenderSlot ../webgl-engine/lib/tracer ../../webgl/Texture ../../webgl/VertexArrayObject ../../webgl/BufferObject ../../webgl/Program ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/DefaultVertexBufferLayouts ../../webgl/Util".split(" "),
function(Fa,Ga,F,ga,U,ha,Ha,Ia,L,ia,ja,Ja,V,B,p,G,M,W,Ka,La,ka,Ma,la,Na,ma){var X=B.assert;B=p.vec2d;var t=p.vec3d,na=p.vec4d,Oa=p.mat4d.identity(),Pa=[2,2],oa=M.OPAQUE_TERRAIN,pa=M.TRANSPARENT_TERRAIN,qa=t.create(),Y,Z=B.create();p=function(p,N){function B(a,b){var d=a.screenDepth,c=b.screenDepth;return d<c?-C:d>c?C:0}function M(a,b){return 0===a.tiles.length?-C:0===b.tiles.length?C:B(a.tiles.data[0],b.tiles.data[0])}function O(a,b){void 0===b&&(b=f.subdivisionReduceLevels);return 0===b?a:0>b?Math.floor((a-
1)*(1<<-b))+1:Math.floor((a-1)/(1<<b))+1}N=N||256;var ra,sa=!1,k=null,$=null,u=null,ta={},e,q,ua=new ia(ha,function(){},!1),r=new L(10,function(){return{root:null,tiles:new L(300)}}),y=new F.IteratorPreorder,H,P,va,wa=!0,D=1,Q=!0,f={mode:"none",width:1.5,falloff:1.5,wireOpacity:1,surfaceOpacity:0,color:[1,1,1,0],subdivision:"geometry",subdivisionReduceLevels:0},E=!1,xa=!1,aa=!1,C=1,R=!0,ba=!0,I=null,s=null,z=null,ya=null,A=[];this.updateTileBackground=function(a){var b=new Fa;z&&z.reject(b.promise);
ya=a;z=b;if(a){var d=new Image;d.src=a instanceof Image?a.src:a;d.complete?b.resolve(d):d.onload=function(){b.isFulfilled()||b.resolve(d)}}else b.resolve(null);this.renderTileBackground();return b.promise};var S=0,J=0,ca=0,da=0;this.resourceCounter=new Ha;this.castShadows=!1;this.clippingExtent=null;this.loaded=function(){};var za=!1;this.needsRender=!0;this.receiveShadows=this.didRender=!1;var x=new L(10),K=0,T=new L(30),Aa=new ia(function(){this.extent=na.create();this.maxLevel=this.minLevel=0;
this.callback=null},function(){},!1);this.renderTileBackground=function(){if(e&&z&&s)return z.then(function(a){s.setGridImage(a);k&&F.traverseTilesPreorder(k,function(a){s.updateTileTexture(a)}.bind(this))}.bind(this))};this.initializeRenderContext=function(a){e=a.rctx;q=a.rctx.gl;P=e.extensions.textureFilterAnisotropic;X(!Y||Y===P.TEXTURE_MAX_ANISOTROPY_EXT,"contexts have different definitions afExt.TEXTURE_MAX_ANISOTROPY_EXT");null!=P&&(Y=P.TEXTURE_MAX_ANISOTROPY_EXT,va=e.parameters.maxMaxAnisotropy,
Math.min(8,va));U.setSupportsUintIndices(!!e.extensions.elementIndexUint);var b=function(a){Ga(a).then(function(){sa=!0;this.setNeedsRender()}.bind(this)).otherwise(b)}.bind(this);b(this.renderTileBackground());ra=a.textureRep;var d=a.shaderSnippets,c=a.shaderRep;a=a.programRep;d.vsTerrain||d._parse(Ja);e.extensions.standardDerivatives;var h=new ja("terrain",["vsTerrain","fsTerrain"],null,a,c,d,e);h.addDefine("Spherical","SPHERICAL");h.addDefine("Overlay","OVERLAY");h.addDefine("Atmosphere","ATMOSPHERE");
h.addDefine("Wireframe","WIREFRAME");h.addDefine("TileBorders","TILE_BORDERS");h.addBinaryShaderSnippetSuffix("Wireframe","Wireframe",[!1,!0]);h.addDefine("ReceiveShadows","RECEIVE_SHADOWS");c=new ja("terrainNormal",["vsTerrainNormal","fsNormal"],null,a,c,d,e);c.addDefine("Spherical","SPHERICAL");c.addDefine("AlphaZero","ALPHA_ZERO");u={depth:a.get("depth"),depthShadowMap:a.get("depthShadowMap"),depthOnly:new Ma(e,d.vsTerrainDepthOnly,d.fsTerrainDepthOnly,la.Default3D)};$={color:h,normal:c};this._updatePrograms();
s=new Ia(e,N,a,this.resourceCounter,this.setNeedsRender.bind(this));z&&z.then(function(a){s.setGridImage(a)});I=new Ka(e,{target:q.TEXTURE_2D,pixelFormat:q.RGBA,dataType:q.UNSIGNED_BYTE,samplingMode:q.NEAREST,width:4,height:4})};this.uninitializeRenderContext=function(a){null!=I&&(I.dispose(),I=null);s&&(s.dispose(),s=null)};this._updatePrograms=function(){var a="spherical"===p,b="shader"===f.mode;u.color=$.color.getProgram([a,!0,a&&ba,b,E,b||E,this.receiveShadows]);u.normal=$.normal.getProgram([a,
!0])};this.install=function(a){a.addExternalRenderer([oa,pa],this)};this.uninstall=function(a){a.removeExternalRenderer(this)};this.setRootTiles=function(a){k=a};this.isStencilEnabledLayerExtent=function(a){return A.some(function(b){return a===b.id})};this.addStencilEnabledLayerExtent=function(a,b){A.push({id:a,extent:[b[0],b[1],b[3],b[4]]})};this.removeStencilEnabledLayerExtent=function(a){for(var b=0;b<A.length;b++)if(a===A[b].id){A.splice(b,1);break}};this.setTileSize=function(a){N=a;s&&(s.tileSize=
a)};this.loadTile=function(a){X(null===a.renderData);a.renderData=ua.acquire();a.renderData.init();var b=this.getLocalOriginOfTile(a),d=a.createGeometry(a.renderData.updateGeometryState(a),b,"debug"===f.mode,a.renderData.geometryInfo);a.renderData.localOrigin=b;this._setTileGeometry(a,d);s.updateTileTexture(a)};this.queryVisibleLevelRange=function(a,b,d,c){var h=Aa.acquire();na.set(a,h.extent);h.minLevel=b?b:-Number.MAX_VALUE;h.maxLevel=null!=d?d:Number.MAX_VALUE;h.callback=c;T.push(h);this.setNeedsRender()};
this.updateTileTexture=function(a){s&&s.updateTileTexture(a)};this.updateTileGeometryNeedsUpdate=function(a){return a.renderData.updateGeometryState(a).needsUpdate};this._updateTileGeometry=function(a){for(var b=a.renderData.geometryState,d=a.layerInfo[ga.LayerClass.ELEVATION],c=0;c<d.length;c++)d[c].pendingUpdates&=~ga.TileUpdateTypes.UPDATE_GEOMETRY;return b.needsUpdate?(a.renderData.vao&&this._releaseTileGeometry(a),b=a.createGeometry(b,a.renderData.localOrigin,"debug"===f.mode,a.renderData.geometryInfo),
this._setTileGeometry(a,b),!0):!1};this.updateTileGeometry=function(a){a.renderData.updateGeometryState(a);return this._updateTileGeometry(a)};this.unloadTile=function(a){this._releaseTileGeometry(a);a.renderData.texture&&a.renderData.texture.dispose();ua.release(a.renderData);a.renderData=null};this.getLocalOriginOfTile=function(a){if(10<=a.lij[0]){for(;7<a.lij[0];)a=a.parent;return a.centerAtSeaLevel}if("spherical"===p)return qa;for(;a.parent;)a=a.parent;return a.centerAtSeaLevel};this.setVisibility=
function(a){wa=a;this.setNeedsRender()};this.getStats=function(){return{numTilesRendered:J,numTilesCulled:ca,numTrianglesRendered:S,numOriginsRendered:da}};this.setDisableRendering=function(a){xa=!!a;this.setNeedsRender()};this.getOpacity=function(){return D};this.getWireframeEnabled=function(){return"shader"===f.mode};this.setWireframe=function(a){if(!a||!0===a)a={mode:a?"shader":"none"};if(void 0!==a.mode&&f.mode!==a.mode){var b="debug"===f.mode,d="debug"===a.mode;f.mode=a.mode;this._updatePrograms();
b!==d&&k&&F.traverseTilesPreorder(k,function(a){if(a.renderData){a.renderData.vao&&this._releaseTileGeometry(a);var b=a.createGeometry(a.renderData.updateGeometryState(a),a.renderData.localOrigin,d,a.renderData.geometryInfo);this._setTileGeometry(a,b)}}.bind(this));this.setNeedsRender()}for(var c in a)f.hasOwnProperty(c)&&(f[c]=a[c]),this.setNeedsRender()};this.setOpacity=function(a){D=a;this.setNeedsRender()};this.setDrawSkirts=function(a){Q=a;this.setNeedsRender()};this.setCullBackFaces=function(a){aa=
a;this.setNeedsRender()};this.setRenderOrder=function(a){C=a;this.setNeedsRender()};this.setBorders=function(a){E!==a&&(E=a,"none"===f.mode&&(f.transitionTime=0),this._updatePrograms(),this.setNeedsRender())};this.setFrontMostTransparent=function(a){R!==a&&(R=a,this.setNeedsRender())};this.setVelvetOverground=function(a){ba!==a&&(ba=a,this._updatePrograms(),this.setNeedsRender())};this.setNeedsRender=function(){this.needsRender=!0;this.didRender=!1};this.resetNeedsRender=function(){this.didRender&&
(this.needsRender=0!==T.length,this.didRender=!1)};var fa=t.create();this.isTransparent=function(){return 1>D||"shader"===f.mode&&(1>f.wireOpacity||1>f.surfaceOpacity)||!ya};this.render=function(a){if(sa&&!xa&&wa&&k){var b=this.isTransparent();if(a.slot===(b?pa:oa)){W.trace("# BEGIN RENDER TERRAIN");r.clear();H=null;this._renderCollectOrigins();if(0!==C){for(var d=0;d<r.length;d++)this._sortFrontToBack(r.data[d].tiles,B);this._sortFrontToBack(r,M)}var c,h=!1,ea=!1;c=a.pass;var g=a.camera;e.setBlendFunctionSeparate(q.SRC_ALPHA,
q.ONE_MINUS_SRC_ALPHA,q.ONE,q.ONE_MINUS_SRC_ALPHA);e.setFaceCullingEnabled(aa);if(c===G.MATERIAL){if(ea=b,h=a.shadowMap&&a.shadowMap.getEnableState(),this.receiveShadows!=h&&(this.receiveShadows=h,this._updatePrograms()),b&&R&&(h=u.depthOnly,e.bindProgram(h),e.setColorMask(!1,!1,!1,!1),e.setDepthTestEnabled(!0),this._renderTilesDepthOnly(g,e,h),e.setColorMask(!0,!0,!0,!0),e.setDepthFunction(q.EQUAL),e.setDepthWriteEnabled(!1)),c=u.color,h=!0,e.bindProgram(c),c.setUniform1f("opacity",D),e.setBlendingEnabled(ea),
"shader"===f.mode||E)c.setUniform1f("wireframe.width",f.width),c.setUniform1f("wireframe.falloff",Math.min(f.width,f.falloff)),c.setUniform1f("wireframe.wireOpacity",f.wireOpacity*D),c.setUniform1f("wireframe.surfaceOpacity",f.surfaceOpacity*D),c.setUniform4fv("wireframe.color",f.color),c.setUniform1f("wireframe.near",g.near),c.setUniform1f("wireframe.far",g.far),"geometry"!==f.subdivision&&"constant"!==f.subdivision&&c.setUniform1f("wireframe.subdivision",O(f.subdivision))}else if(c===G.MATERIAL_DEPTH_SHADOWMAP&&
this.castShadows||c===G.MATERIAL_DEPTH)c=c===G.MATERIAL_DEPTH_SHADOWMAP?u.depthShadowMap:u.depth,e.bindProgram(c),c.setUniformMatrix4fv("model",Oa),Z[0]=g.near,Z[1]=g.far,c.setUniform2fv("nearFar",Z);else if(c===G.MATERIAL_NORMAL)c=u.normal,e.bindProgram(c);else return;a.shadowMap&&a.shadowMap.bind(c);a.ssaoHelper&&a.ssaoHelper.setUniforms(c);h&&(c.setUniform1i("tex",4),c.setUniform1i("overlayTex",5));c.setUniformMatrix4fv("viewNormal",g.viewInverseTransposeMatrix);c.setUniformMatrix4fv("proj",g.projectionMatrix);
c.setUniform3fv("lightDirection",a.lightingData.direction);g=g.viewMatrix;t.set3(g[12],g[13],g[14],fa);t.normalize(fa);c.setUniform3fv("viewDirection",fa);for(da=S=ca=J=0;x.length<x.data.length&&0<T.length;)d=T.pop(),x.push(d);K=x.length;for(d=0;d<r.length;d++){var m=r.data[d];c.setUniform3fv("origin",m.origin);V.bindView(m.origin,g,c);a.shadowMap&&a.shadowMap.bindView(c,m.origin);da++;this._renderTiles(m.tiles,c,h,a)}ea&&e.setBlendingEnabled(!1);b&&R&&(e.setDepthFunction(q.LESS),e.setDepthWriteEnabled(!0));
aa&&e.setFaceCullingEnabled(!1);a.stencilRenderingHelper&&a.stencilRenderingHelper.getEnableState()&&a.stencilRenderingHelper.prepareStencilDisabledPass();for(a=0;a<x.length;a++)b=x.data[a],Aa.release(b),b.callback(a>=K),b.callback=null;x.clear();0<J&&!za&&(za=!0,this.loaded&&this.loaded());W.trace("# END RENDER TERRAIN");return!0}}};this._renderCollectOrigins=function(){for(var a=0;a<k.length;a++){var b=k[a],d=r.next();d.root=b;d.origin="spherical"===p?qa:b.centerAtSeaLevel;d.tiles.clear();this._renderCollectOriginsForRoot(d)}};
this._renderCollectOriginsForRoot=function(a){for(y.reset(a.root);!y.done;){var b=y.next(),d=b.renderData;if(d&&!b.visible)ca++,y.skip();else{var c=r.peek();if(7===b.lij[0]){if(c===a||0!==c.tiles.length)c=r.next(),c.tiles.clear();c.root=b;c.origin=b.centerAtSeaLevel}if(d){d=b.lij[0];10<=d?r.peek().tiles.push(b):a.tiles.push(b);if(null===H||H.lij[0]<d)H=b;y.skip()}}}};this._sortFrontToBack=function(a,b){a.sort(b)};this._renderTilesDepthOnly=function(a,b,d){var c=a.viewMatrix;d.setUniformMatrix4fv("proj",
a.projectionMatrix);for(a=0;a<r.length;a++){var e=r.data[a];d.setUniform3fv("origin",e.origin);V.bindView(e.origin,c,d);for(var f=0;f<e.tiles.length;f++){var g=e.tiles.data[f].renderData;b.bindVAO(g.vao);ma.assertCompatibleVertexAttributeLocations(g.vao,d);var m=g.vao.indexBuffer.size;Q||(m=g.geometryInfo.numWithoutSkirtIndices);b.drawElements(q.TRIANGLES,m,g.vao.indexBuffer.indexType,0)}}b.bindVAO(null)};this._renderTiles=function(a,b,d,c){if(0!==a.length){var h=q.TRIANGLES;"debug"===f.mode&&(h=
q.LINES);var s="geometry"===f.subdivision,g="constant"===f.subdivision,m=H,r,p=!1;m?(r=m.lij[0],m=O(m.renderData.geometryInfo.numVertsPerRow)):m=r=16;e.setDepthTestEnabled(!0);e.setBlendingEnabled(this.isTransparent());for(var t=0;t<a.length;t++){var v=a.data[t],n=v.renderData;if(c.stencilRenderingHelper&&c.stencilRenderingHelper.getEnableState()){for(var l=!1,w=0;w<A.length;w++)if(v.intersectsExtent(A[w].extent)){l=!0;break}l&&!p?(c.stencilRenderingHelper.prepareStencilReadPass(),p=!0):!l&&p&&(c.stencilRenderingHelper.prepareStencilDisabledPass(),
p=!1)}W.trace("# RENDER TILE "+v.lij[0]+"/"+v.lij[1]+"/"+v.lij[2]+", screenDepth:"+v.screenDepth);if(d){b.setUniform2fv("texOffset",n.texOffset);b.setUniform1f("texScale",n.texScale);e.bindTexture(n.textureReference||n.texture,4);if(n.overlayTexId){var l=b,w=n,k=w.overlayTexId,u=ta[k];u||(u=ra.aquire(k).getGLTexture(),X(u),ta[k]=u);l.setUniform2fv("overlayTexOffset",w.overlayTexOffset);l.setUniform2fv("overlayTexScale",w.overlayTexScale);l.setUniform1f("overlayOpacity",w.overlayOpacity);e.bindTexture(u,
5)}else b.setUniform2fv("overlayTexOffset",Pa),e.bindTexture(I,5);if(("shader"===f.mode||E)&&(s||g))s?b.setUniform1f("wireframe.subdivision",O(n.geometryInfo.numVertsPerRow)):(l=O(m,v.lij[0]-r),b.setUniform1f("wireframe.subdivision",l))}l=n.vao.indexBuffer.size;Q||(l=n.geometryInfo.numWithoutSkirtIndices);e.bindVAO(n.vao);ma.assertCompatibleVertexAttributeLocations(n.vao,b);e.drawElements(h,l,n.vao.indexBuffer.indexType,0);v.renderOrder=J;J++;S+=l/3;n=v.extent;v=v.lij[0];for(l=0;l<K;)w=x.data[l],
k=w.extent,v>=w.minLevel&&v<=w.maxLevel&&k[0]<=n[2]&&k[2]>=n[0]&&k[1]<=n[3]&&k[3]>=n[1]?(x.swap(l,K-1),K--):l++}e.bindVAO(null)}};var Ba=t.create(),Ca=t.create(),Da=t.create(),Ea=this.clippingExtent;this.intersect=function(a,b,d,c){if(k&&(!a.isSelection||!this.isTransparent())){t.subtract(d,b,Ba);var e=a.getMinResult(),f=a.getMaxResult();for(y.reset(k);!y.done;){var g=y.next();if(null!==g.renderData){if(a.enableInvisibleTerrain){if(!g.visible&&Ea&&!g.intersectsExtent(Ea))continue}else if(!g.visible)continue;
c=g.renderData.geometryInfo.geometry;var m=g.renderData.localOrigin;t.subtract(b,m,Ca);t.subtract(d,m,Da);V.intersectTriangleGeometry(c,0,void 0,a,Ca,Da,function(b,c,d){if(Q||!(3*d>=g.renderData.geometryInfo.numWithoutSkirtIndices))if(0<=b&&(a.enableBackfacesTerrain||0>t.dot(c,Ba))){if(void 0===e.dist||b<e.dist)d=F.lij2str(g.lij[0],g.lij[1],g.lij[2]),e.set(void 0,d,b,c,void 0),e.setIntersector("terrain");if(void 0===f.dist||b>f.dist)d=F.lij2str(g.lij[0],g.lij[1],g.lij[2]),f.set(void 0,d,b,c,void 0),
f.setIntersector("terrain")}})}}}};this._setTileGeometry=function(a,b){var d=a.renderData,c=b.geometry.getData(),f=c.getVertexAttr().terrain.data,c=c.getFaces()[0].indices.terrain;d.vao=new La(e,la.Default3D,{geometry:Na.Pos3Tex},{geometry:ka.createVertex(e,q.STATIC_DRAW,f)},ka.createIndex(e,q.STATIC_DRAW,c));d.geometryInfo.geometry&&U.releaseGeometry(d.geometryInfo.geometry);d.geometryInfo=b;this.setNeedsRender()};this._releaseTileGeometry=function(a){a=a.renderData;a.vao.dispose(!0);a.vao=null;
a.geometryInfo.geometry&&U.releaseGeometry(a.geometryInfo.geometry);a.geometryInfo.geometry=null;this.setNeedsRender()}};p.TileRenderData=ha;return p});