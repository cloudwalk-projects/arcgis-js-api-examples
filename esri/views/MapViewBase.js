// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper dojo/_base/lang ../core/accessorSupport/decorators ../core/HandleRegistry ../core/watchUtils ../core/promiseUtils ../Viewpoint ../geometry/Point ../geometry/ScreenPoint ../geometry/Extent ../geometry/SpatialReference ./View ./ViewAnimation ./2d/FrameTask ./2d/PaddedViewState ./2d/MapViewConstraints ./2d/AnimationManager ./2d/viewpointUtils".split(" "),function(A,B,q,e,k,d,r,g,s,t,h,u,l,v,w,x,m,y,n,z,f){return function(p){function b(a){var c=
this;p.call(this,a);this._frameTask=new m(this);this._handles=new r;this.interacting=!1;this.resizeAlign="center";this.type="2d";this.constraints=new n;this.padding={top:0,right:0,bottom:0,left:0};this._frameTask=new m(this);g.init(this,"stationary",function(a){c._frameTask.stationary=a});this._handles.add([this.on("resize",function(a){return c._resizeHandler(a)})]);this.watch("ready",function(a){return c._readyWatcher(a)},!0);a=this.notifyChange.bind(this,"tileInfo");g.on(this,"map.basemap.baseLayers",
"change",a,a,a);g.on(this,"map.layers","change",a,a,a);var b=function(){this._set("updating",this.layerViewManager.factory.working||this.allLayerViews.some(function(a){return!0===a.updating}))}.bind(this);this.allLayerViews.on("change",function(){b();c._handles.remove("layerViewsUpdating");c._handles.add(c.allLayerViews.map(function(a){return a.watch("updating",b)}).toArray(),"layerViewsUpdating")})}q(b,p);Object.defineProperty(b.prototype,"animation",{set:function(a){var c=this,b=this._get("animation");
b&&b.stop();!a||a.isFulfilled()?this._set("animation",null):(this._set("animation",a),a.then(function(){return c.animation=null},function(){return c.animation=null},function(a){return c.state.viewpoint=a}))},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"center",{get:function(){if(!this.ready)return this._get("center");var a=this.content.center;return new h({x:a[0],y:a[1],spatialReference:this.content.spatialReference})},set:function(a){if(null!=a)if(this.ready){var c=this.viewpoint;
f.centerAt(c,c,a);this.viewpoint=c}else this._set("center",a),this.notifyChange("initialExtentRequired")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"constraints",{set:function(a){var c=this,b=this._get("constraints");b&&(this._handles.remove("constraints"),b.view=null);this._set("constraints",a);a&&(this.ready&&(a.view=this,this.state.viewpoint=a.constrain(this.content.viewpoint,null)),this._handles.add(a.on("update",function(){c.ready&&c.state&&(c.state.viewpoint=a.constrain(c.content.viewpoint,
null))}),"constraints"))},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"extent",{get:function(){return!this.ready?this._get("extent"):this.content.extent.clone()},set:function(a){if(null!=a)if(this.ready){var c=this.viewpoint;f.setExtent(c,c,a,this.size,{constraints:this.constraints});this.viewpoint=c}else this._set("extent",a),this._set("center",null),this._set("scale",0),this.notifyChange("initialExtentRequired")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,
"initialExtentRequired",{get:function(){var a=this.get("map.initialViewProperties.viewpoint"),c=this._get("extent"),b=this._get("center"),d=this._get("scale"),e=this._get("viewpoint"),f=this._get("zoom"),g=this.initialExtent;return a?!(!b||!(0<d)||g):g?!1:!(c||e||b&&(0<d||-1!==f))},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"padding",{get:function(){return this.ready?this.state.padding:this._get("padding")},set:function(a){this.ready?(this.state.padding=a,this._set("padding",
this.state.padding)):this._set("padding",a)},enumerable:!0,configurable:!0});b.prototype._readyGetter=function(){var a=this.get("map.basemap.baseLayers.0"),c=this.get("map.layers.0"),b=!0;a&&a.load();c&&c.load();a&&a.loaded?b=!1:!a&&c&&c.loaded?b=!1:!a&&!c&&(b=!1);return this.inherited(arguments)&&!b};Object.defineProperty(b.prototype,"rotation",{get:function(){return this.ready?this.content.rotation:this._get("rotation")},set:function(a){if(!isNaN(a))if(this.ready){var c=this.viewpoint;f.rotateTo(c,
c,a);this.viewpoint=c}else this._set("rotation",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"scale",{get:function(){return this.ready?this.content.scale:this._get("scale")},set:function(a){if(!isNaN(a))if(this.ready){var c=this.viewpoint;f.scaleTo(c,c,a);this.viewpoint=c}else{this._set("scale",a);if(a=this._get("extent"))this._set("extent",null),this._set("center",a.center);this.notifyChange("initialExtentRequired")}},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,
"tileInfo",{get:function(){return this.get("map.basemap.baseLayers.0.tileInfo")||this.get("map.layers.0.tileInfo")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"viewpoint",{get:function(){return!this.ready?this._get("viewpoint"):this.content.viewpoint.clone()},set:function(a){if(null!=a)if(this.ready){var c=f.create();f.copy(c,a);this.constraints.constrain(c,this.content.viewpoint);this.state.viewpoint=c;this._set("viewpoint",c)}else this._set("viewpoint",a),this.notifyChange("initialExtentRequired")},
enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"zoom",{get:function(){return!this.ready?this._get("zoom"):this.constraints.scaleToZoom(this.scale)},set:function(a){if(null!=a&&(this.ready||(this.notifyChange("initialExtentRequired"),this._set("zoom",a)),this.constraints.effectiveLODs)){var c=this.viewpoint;f.scaleTo(c,c,this.constraints.zoomToScale(a));this.viewpoint=c;this._set("zoom",this.constraints.scaleToZoom(this.scale))}},enumerable:!0,configurable:!0});b.prototype.goTo=
function(a,c){var b=this,d=this.content;c=k.mixin({animate:!0},c,{spatialReference:this.spatialReference||null,size:d?d.size:this.size,currentViewpoint:d?d.viewpoint:this.viewpoint,constraints:this.constraints,snapToZoom:this.constraints.snapToZoom});return f.createAsync(a,c).then(function(a){if(c.animate){var d=null;if(!b.ready||!b.animationManager)return b.viewpoint=a,d=new x({target:a}),d.finish(),d;b.constraints.constrain(a,b.viewpoint);return d=b.animation=b.animationManager.animateTo(a,b.viewpoint,
c)}b.viewpoint=a})};b.prototype.hitTest=function(a,c){return s.reject("Should be implemented by subclasses")};b.prototype.toMap=function(a,c,b){if(!this.ready)return null;a&&null!=a.x&&(b=c,c=a.y,a=a.x);var d=[0,0];this.state.toMap(d,[a,c]);b=b||new h;b.x=d[0];b.y=d[1];b.spatialReference=this.spatialReference;return b};b.prototype.toScreen=function(a,b,d,e){if(!this.ready)return null;a&&null!=a.x&&(e=b,b=a.y,a=a.x);e=d||e||new u;a=[a,b];this.state.toScreen(a,a);e.x=a[0];e.y=a[1];return e};b.prototype.pixelSizeAt=
function(a,b){if(!this.ready)return NaN;a&&null!=a.x&&(b=a.y,a=a.x);return this.content.pixelSizeAt([a,b])};b.prototype.requestLayerViewUpdate=function(a){this.ready&&this._frameTask.requestLayerViewUpdate(a)};b.prototype.getDefaultSpatialReference=function(){return this.get("map.initialViewProperties.spatialReference")||this.get("defaultsFromMap.spatialReference")};b.prototype._resizeHandler=function(a){var b=this.state;if(b){var d=this.content.viewpoint,e=this.content.size.concat();b.size=[a.width,
a.height];f.resize(d,d,e,this.content.size,this.resizeAlign);d=this.constraints.constrain(d,null);this.state.viewpoint=d}};b.prototype._readyWatcher=function(a){a||this._frameTask.stop();this.constraints.view=this;a={zoom:this._get("zoom"),scale:this._get("scale"),center:this._get("center"),extent:this._get("extent"),padding:this._get("padding"),rotation:this._get("rotation"),viewpoint:this._get("viewpoint")};var b=this.get("map.initialViewProperties.viewpoint"),b=f.create(b&&!a.center&&!a.extent?
{viewpoint:b}:a,{spatialReference:this.spatialReference,size:this.size,constraints:this.constraints,extent:this.initialExtent});this.animationManager=new z;this.state=new y({padding:a.padding,size:this.size,viewpoint:b});this.content=this.state.content;this._frameTask.start()};e([d.property()],b.prototype,"animation",null);e([d.property({value:null,type:h,dependsOn:["content.center"]})],b.prototype,"center",null);e([d.property({type:n})],b.prototype,"constraints",null);e([d.property()],b.prototype,
"content",void 0);e([d.property({value:null,type:l,dependsOn:["content.extent"]})],b.prototype,"extent",null);e([d.property({readOnly:!0})],b.prototype,"interacting",void 0);e([d.property({type:l})],b.prototype,"initialExtent",void 0);e([d.property({dependsOn:["map.initialViewProperties.viewpoint"]})],b.prototype,"initialExtentRequired",null);e([d.property({value:{top:0,right:0,bottom:0,left:0},cast:function(a){return k.mixin({top:0,right:0,bottom:0,left:0},a)}})],b.prototype,"padding",null);e([d.property()],
b.prototype,"resizeAlign",void 0);e([d.property({value:0,type:Number,dependsOn:["content.rotation"]})],b.prototype,"rotation",null);e([d.property({type:Number,dependsOn:["content.scale"]})],b.prototype,"scale",null);e([d.property({type:v,dependsOn:["map.initialViewProperties.spatialReference"]})],b.prototype,"spatialReference",void 0);e([d.property()],b.prototype,"state",void 0);e([d.property({readOnly:!0,dependsOn:["map.initialViewProperties.viewpoint","map.layers","map.basemap"]})],b.prototype,
"tileInfo",null);e([d.property({readOnly:!0})],b.prototype,"type",void 0);e([d.property({value:null,type:t,dependsOn:["content.viewpoint"]})],b.prototype,"viewpoint",null);e([d.property({value:-1,dependsOn:["content.scale"]})],b.prototype,"zoom",null);return b=e([d.subclass("esri.views.MapViewBase")],b)}(d.declared(w))});